(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{104:function(t,e,i){t.exports=i(258)},109:function(t,e,i){},110:function(t,e,i){},258:function(t,e,i){"use strict";i.r(e);var a=i(0),n=i.n(a),s=i(97),r=i.n(s),o=(i(109),i(110),i(4)),l=i(5),h=i(8),c=i(6),d=i(9),u=i(1),m=i(14),p=function(t){function e(t,i,a,n,s,r,l,d){var m;return Object(o.a)(this,e),(m=Object(h.a)(this,Object(c.a)(e).call(this,t))).gridWidth=i,m.gridHeight=a,m.nRow=n,m.nCol=s,m.width=m.gridWidth*m.nCol,m.height=m.gridHeight*m.nRow,m.padding=r,m.margin=l,m.id=d,m.drawLine=m.drawLine.bind(Object(u.a)(m)),m.visulizeBox=m.visulizeBox.bind(Object(u.a)(m)),m.drawBasicStructure=m.drawBasicStructure.bind(Object(u.a)(m)),m.generateRandomArray=m.generateRandomArray.bind(Object(u.a)(m)),m.getX=m.getX.bind(Object(u.a)(m)),m.getY=m.getY.bind(Object(u.a)(m)),m.getSVG=m.getSVG.bind(Object(u.a)(m)),m.drawVerticalGrid=m.drawVerticalGrid.bind(Object(u.a)(m)),m.drawHorizontalGrid=m.drawHorizontalGrid.bind(Object(u.a)(m)),m.drawSeparator=m.drawSeparator.bind(Object(u.a)(m)),m.drawIndicator=m.drawIndicator.bind(Object(u.a)(m)),m.select=m.select.bind(Object(u.a)(m)),m.deselect=m.deselect.bind(Object(u.a)(m)),m.sorted=m.sorted.bind(Object(u.a)(m)),m.move=m.move.bind(Object(u.a)(m)),m.shift=m.shift.bind(Object(u.a)(m)),m.warn=m.warn.bind(Object(u.a)(m)),m}return Object(d.a)(e,t),Object(l.a)(e,[{key:"drawLine",value:function(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"gray";this.svg.append("line").style("stroke",n).attr("x1",this.getX(t)).attr("y1",this.getY(e)).attr("x2",this.getX(i)).attr("y2",this.getY(a))}},{key:"drawBasicStructure",value:function(){this.drawLine(0,0,this.width,0),this.drawLine(0,this.height,this.width,this.height),this.drawLine(0,0,0,this.height),this.drawLine(this.width,0,this.width,this.height)}},{key:"drawHorizontalGrid",value:function(){for(var t=1;t<=this.nRow-1;t++)this.drawLine(0,t*this.height/this.nRow,this.width,t*this.height/this.nRow)}},{key:"drawVerticalGrid",value:function(){for(var t=1;t<=this.nCol-1;t++)this.drawLine(t*this.width/this.nCol,0,t*this.width/this.nCol,this.height)}},{key:"drawSeparator",value:function(t,e,i){var a=this.gridWidth*e,n=(t-.5)*this.gridHeight,s=this.svg.append("g").attr("id","separator-"+i).attr("transform","translate("+this.getX(a)+", "+this.getY(n)+")");s.append("line").attr("x1",0).attr("y1",0).attr("x2",0).attr("y2",1.5*this.gridHeight).style("stroke","gray"),s.append("line").attr("x1",0).attr("y1",.45*this.gridHeight).attr("x2",1.7*this.gridHeight).attr("y2",.45*this.gridHeight).style("stroke","gray"),s.append("text").attr("fill","gray").attr("font-size","0.9rem").attr("dy",.4*this.gridHeight).attr("dx",.05*this.gridWidth).text("Unsort")}},{key:"drawIndicator",value:function(t,e){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3?arguments[3]:void 0,n=(e+.05-1)*this.gridWidth,s=(t+.05-1+.1)*this.gridHeight,r=this.svg.append("g").attr("id","indicator-"+a).attr("transform","translate("+this.getX(n)+", "+this.getY(s)+")");r.append("line").attr("x1",0).attr("y1",.45*this.gridHeight).attr("x2",.45*this.gridWidth).attr("y2",0).style("stroke","gray"),r.append("line").attr("x1",.45*this.gridWidth).attr("y1",0).attr("x2",.9*this.gridWidth).attr("y2",.45*this.gridHeight).style("stroke","gray"),i&&r.append("text").attr("fill","gray").style("text-anchor","middle").style("alignment-baseline","central").attr("font-size","0.7rem").attr("dy",.45*this.gridHeight).attr("dx",.45*this.gridWidth).text(i)}},{key:"select",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2?arguments[2]:void 0;e?m.a("#"+t+" > rect").transition().duration(i).attr("fill","blue").on("end",e):m.a("#"+t+" > rect").transition().duration(i).attr("fill","blue")}},{key:"deselect",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:500;e?m.a("#"+t+" > rect").transition().duration(i).attr("fill","gray").on("end",e):m.a("#"+t+" > rect").transition().duration(i).attr("fill","gray")}},{key:"sorted",value:function(t,e){m.a("#"+t+" > rect").transition().duration(e).attr("fill","green")}},{key:"warn",value:function(t,e){m.a("#"+t+" > rect").transition().duration(e).attr("fill","red")}},{key:"move",value:function(t,e,i){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.05,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.05,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:500,o=this.gridWidth*(+i-1+n),l=this.gridHeight*(+e-1+a);s?m.a("#"+t).transition().duration(r).attr("transform","translate("+this.getX(o)+", "+this.getY(l)+")").on("end",s):m.a("#"+t).transition().duration(r).attr("transform","translate("+this.getX(o)+", "+this.getY(l)+")")}},{key:"shift",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:500,a=arguments.length>3?arguments[3]:void 0,n=t.split(/[ ]+/),s=n[1];if("null"===s)null!==e&&e();else for(var r=s.split(","),o=n[2].split("-"),l=0;l<r.length;l++){var h=r[l],c=null;l===r.length-1&&(c=e),this.move(h,o[0],+o[1]+l+a,.05,.05,c,i)}}},{key:"visulizeBox",value:function(t,e,i,a,n,s){var r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"gray",o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"white",l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:5,h=arguments.length>9&&void 0!==arguments[9]?arguments[9]:.05,c=arguments.length>10&&void 0!==arguments[10]?arguments[10]:.05,d=(1-2*h)*this.gridWidth*i,u=(1-2*c)*this.gridHeight*a,m=(e-1+h)*this.gridWidth,p=(t-1+c)*this.gridHeight,v=this.svg.append("g").attr("id",s).attr("transform","translate("+this.getX(m)+", "+this.getY(p)+")"),g=(.5-h)*this.gridWidth*i,f=(.5-c)*this.gridHeight*a;v.append("rect").attr("rx",l).attr("ry",l).attr("width",d).attr("height",u).attr("fill",r),v.append("text").attr("fill",o).style("text-anchor","middle").style("alignment-baseline","central").attr("font-size","1rem").attr("dy",f).attr("dx",g).text(n)}},{key:"getX",value:function(t){return t+this.margin.left}},{key:"getY",value:function(t){return t+this.margin.top}},{key:"getSVG",value:function(){return m.a("#"+this.id).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom)}},{key:"generateRandomArray",value:function(t,e){for(var i=Math.round(Math.random()*(e-t)+t),a=[],n=0;n<i;n++)a[n]=Math.floor(20*Math.random())-4;return a}}]),e}(a.Component),v=function(t){function e(t){var i;return Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t,30,30,3,9,.05,{top:20,bottom:20,left:20,right:20},"SortDemo"))).input=[3,2,6,2,9,8,4],i.svg=null,i.initViz=i.initViz.bind(Object(u.a)(i)),i.initCol=3,i.default="unsort",i.state={order:i.default},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"componentDidMount",value:function(){this.svg=this.getSVG();this.drawBasicStructure(),this.drawHorizontalGrid(),this.drawLine(123,45,135,57),this.drawLine(147,45,135,57),this.drawLine(132,33,132,54),this.drawLine(138,33,138,54),this.initViz()}},{key:"componentDidUpdate",value:function(t,e){var i=this;if(t.order!==this.state.order){for(var a=[],n=0;n<this.input.length;n++)a.push({num:this.input[n],id:n});if("unsort"===this.state.order)for(var s=0;s<this.input.length;s++){var r="Output-"+s;this.move(r,3,this.initCol+s,.05,.05,null,300),this.deselect(r,null,300)}else{a.sort(function(t,e){var a=t.num,n=e.num;return"aesc"===i.state.order?a-n:n-a});for(var o=0;o<a.length;o++){var l="Output-"+a[o].id;this.move(l,3,this.initCol+o,.05,.05,null,300),this.sorted(l,null,300)}}}}},{key:"initViz",value:function(){this.visulizeBox(1,1,2,1,"Input","Input-Tag","#007bff","white"),this.visulizeBox(3,1,2,1,"Output","Output-Tag","#007bff","white");for(var t=0;t<this.input.length;t++)this.visulizeBox(1,t+this.initCol,1,1,this.input[t],"Input-"+t,"gray","white"),this.visulizeBox(3,t+this.initCol,1,1,this.input[t],"Output-"+t,"gray","white")}},{key:"render",value:function(){var t=this;return n.a.createElement("div",{id:"SortDemo",className:"animationBox"},n.a.createElement("select",{onChange:function(e){t.setState({order:e.target.value})},value:this.state.order,selected:this.default},n.a.createElement("option",{value:"unsort"},"Unsort"),n.a.createElement("option",{value:"aesc"},"Sort by Ascending"),n.a.createElement("option",{value:"desc"},"Sort by Descending")))}}]),e}(p),g=function(t){function e(t){var i;return Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t))).state={},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return n.a.createElement("div",{className:"intro-container"},n.a.createElement("h1",null,"Introduction"),n.a.createElement("p",{className:"intro-text"},"As we live in the tech-driven world and interact with computer software on a daily basis, have you ever wondered how we can a computer show a list of students\u2019 names in alphabetical order or rank them by credits earned either ascendingly or desendingly under the hood?"),n.a.createElement("p",{className:"intro-text"},"Here comes the magic behind various computer operations and data arrangement--sorting algorithms. Since sorting is a very common operation that we want to perform on a collection of data in various real-world use cases and many other advanced algorithms are based on sorting including binary search, people have come up with assorted ways rearrange a given array or list elements according to a certain order."),n.a.createElement("p",{className:"intro-text"},"Different algorithms have different logic and, therefore, different characteristics and efficiency. Through the interactive explorable explanation, you are going to master various sorting algorithm mechanisms and how to apply them to real world situations."),n.a.createElement("h3",null,"Sorting Demo"),n.a.createElement(v,null))}}]),e}(a.Component),f=function(t){function e(t){var i;return Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t))).state={},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return n.a.createElement("div",{className:"intro-container"},n.a.createElement("h1",null,"Rule of Thumb"),n.a.createElement("p",{className:"intro-text"},"In real life, not all cases are general cases. Somtimes those analysis may not work under some special cases. One example can be, suppose the lists in your application are almost sorted, meaning there is a fix number of items that are not sorted. In this case, since the number of insertion is fixed and not dependent on the length of the array, insertion sort actually performs better since its runtime is just O(n) once the number of insertion is fixed. With those in mind, if you just want to have the algorithm with the best trade-off, considering the properties of your lists in the app can sometimes give you good advices."),n.a.createElement("p",{className:"intro-text"},"Another thing you may consider is the property of sorting algorithm: stability. Stability means, suppose two items have the same value, if the sorted list still keeps the relative order as if they are in the unsorted list. This property has lots of important applications such as sort an array with multiple categories. If you are building applications which need those features, keeping in mind about stability can help you filter some sorting algorithms that are not suitable."),n.a.createElement("p",{className:"intro-text"},"Last but not the least, try to use the trial and error technique: there are far more three sorting algorithms mentioned in this explorable explaination: quick sort, heap sort, rainbow sort, random sort... There are just so many sorting algorithms invented by computer scientists. This means, if you still not sure which sort algorithm is good for your application based in previous suggestions, just try everything. And eventually, one of them will give you the best result."))}}]),e}(a.Component),w=i(259),y=i(260),b=i(263),S=i(98),E=i.n(S),z=i(99),I=i.n(z),x=i(2),k=i.n(x),O=function(t){function e(t){var i;return Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t))).state={displayTimePlot:!0},i.handleChangePlot=i.handleChangePlot.bind(Object(u.a)(i)),i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"handleChangePlot",value:function(){this.setState({displayTimePlot:!this.state.displayTimePlot})}},{key:"componentDidMount",value:function(){}},{key:"render",value:function(){var t;return t=this.state.displayTimePlot?n.a.createElement(w.a,{src:E.a}):n.a.createElement(w.a,{src:I.a}),n.a.createElement("div",{className:"intro-container"},n.a.createElement("h1",null,"Complexity Analysis"),n.a.createElement("p",{className:"intro-text"},"There are many sorting algorithms in programming world. However, there exist tradeoffs among the algorithms. In order to compare the performance of different algorithms, we should consider time complexity and space complexity. Time complexity denotes the amount of time taken by an algorithm to run based on the length of the input. Similarly, space complexity denotes the amount of space or memory taken by an algorithm to run based on the length of the input."),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("p",{className:"intro-text"},"Normally, we use Big O-notation to analyze algorithms. This concept determines which is the dominant term of a function. In order words, it asks which term in the function grows the fastest when n is huge. For example, if a function ",n.a.createElement(k.a.Node,{inline:!0},"f(n)=0.00001n^2+2n+100"),", even the coefficent of ",n.a.createElement(k.a.Node,{inline:!0},"n^2")," is small, it still grows the fastest when n goes to infinity, which means ",n.a.createElement(k.a.Node,{inline:!0},"O(f(n))=n^2"),".",n.a.createElement("br",null),n.a.createElement("br",null),"If you are interested in the rigorious definition, here it is:")),n.a.createElement("div",null,n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("p",null,"There is a positive number ",n.a.createElement(k.a.Node,{inline:!0},"n_0")," and positive constant ",n.a.createElement(k.a.Node,{inline:!0},"c")," such that, for all positive number ",n.a.createElement(k.a.Node,{inline:!0},"n\\ge n_0")," if there exists a positive integer ",n.a.createElement(k.a.Node,{inline:!0},"n_0")," and a positive constant ",n.a.createElement(k.a.Node,{inline:!0},"c"," "),"such that, if for all positive integer ",n.a.createElement(k.a.Node,{inline:!0},"n")," that is greater than ",n.a.createElement(k.a.Node,{inline:!0},"n_0"),", then",n.a.createElement(k.a.Node,{inline:!0},"f(n)\\leq cg(n)"),", we then say ",n.a.createElement(k.a.Node,{inline:!0},"O(f(n))=g(n)"),"."))),n.a.createElement("h2",null,"Selection Sort"),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("p",{className:"intro-text"},"For each time to pick the minimum of the unsorted list, it is most likely to go through all of the items in the unsorted list. If you calculate arithemetic sum, the dominant term is ",n.a.createElement(k.a.Node,{inline:!0},"n^2"),", which means, in general, the runtime complexity for selection sort is ",n.a.createElement(k.a.Node,{inline:!0},"O(n^2)"),".",n.a.createElement("br",null),n.a.createElement("br",null),"And as for space complexity, the sorting can be done within the given array so that it does not require extra memory (see the animation). Thus, the space complexity is ",n.a.createElement(k.a.Node,{inline:!0},"O(1)"),".")),n.a.createElement("h2",null,"Insertion Sort"),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("p",{className:"intro-text"},"Similar to selection sort, for each iteration of the insertion, an item is likely to search for the entire sorted list. This means the sum of the operation is similar with the sum in selection sort, which makes it has the time complexity ",n.a.createElement(k.a.Node,{inline:!0},"O(n^2)"),".",n.a.createElement("br",null),n.a.createElement("br",null),"Similarily, as demonstrated by the animation, insertion sort does not need extra space, which means it has space complexity is ",n.a.createElement(k.a.Node,{inline:!0},"O(1)"),".")),n.a.createElement("h2",null,"Merge Sort"),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("p",{className:"intro-text"},"The time complexity of the merge sort is quite hard to analyze since it involves recursion. However, if you want to do the quick estimation, there are some tricks: for an array whose length is n, merge sort need to take ",n.a.createElement(k.a.Node,{inline:!0},"log_2(n)")," levels, and for ",n.a.createElement(k.a.Node,{inline:!0},"i^{th}")," level, the length of array for processing is ",n.a.createElement(k.a.Node,{inline:!0,input:"tex"},"\\frac{n}{2^i}"),". Since merging two arrays need to iterate both arrays, if you take the sum, the dominant term for merge sort is ",n.a.createElement(k.a.Node,{inline:!0},"O(nlogn)"),".",n.a.createElement("br",null),n.a.createElement("br",null),"For each level, it will create a new array, pass it to the next level, and then destroy the array in the current level. This means, as each level goes through, the is at most 1 new created array, which means ts space is just ",n.a.createElement(k.a.Node,{inline:!0},"O(n)"),".")),n.a.createElement("h2",null,"Time and Space Complexity Comparison Table "),n.a.createElement(y.a,{responsive:!0},n.a.createElement("thead",null,n.a.createElement("tr",null,n.a.createElement("th",null,"Sorting Algorithm"),n.a.createElement("th",null,"General Time Complexity"),n.a.createElement("th",null,"General Space Complexity"))),n.a.createElement("tbody",null,n.a.createElement("tr",null,n.a.createElement("td",null,"Selection Sort"),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("td",null,n.a.createElement(k.a.Node,{inline:!0},"O(n^2)"))),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("td",null,n.a.createElement(k.a.Node,{inline:!0},"O(1)")))),n.a.createElement("tr",null,n.a.createElement("td",null,"Insertion Sort"),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("td",null,n.a.createElement(k.a.Node,{inline:!0},"O(n^2)"))),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("td",null,n.a.createElement(k.a.Node,{inline:!0},"O(1)")))),n.a.createElement("tr",null,n.a.createElement("td",null,"MergeSort"),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("td",null,n.a.createElement(k.a.Node,{inline:!0},"O(nlogn)"))),n.a.createElement(k.a.Context,{input:"tex"},n.a.createElement("td",null,n.a.createElement(k.a.Node,{inline:!0},"O(n)")))))),n.a.createElement("h2",null,"Time and Space Complexity Plots"),n.a.createElement(b.a,{variant:"tabs",defaultActiveKey:"time"},n.a.createElement(b.a.Item,null,n.a.createElement(b.a.Link,{eventKey:"time",onClick:this.handleChangePlot},"Time")),n.a.createElement(b.a.Item,null,n.a.createElement(b.a.Link,{eventKey:"space",onClick:this.handleChangePlot},"Space"))),t,n.a.createElement("p",{className:"intro-text"},"With the change of rumtime and memory usage as the length of the list increases, we can see, in general case, if your application is more optimized for speed, then MergeSort can be a strong candidate within all three algorithms. On the other hand, if your application can only be run in limit amount of space, you should consider selection sort or insertion sort to alleviate the space constraint."))}}]),e}(a.Component),N=i(261),j=i(262),M=function(t){function e(t){var i;Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t,30,30,3,10,.05,{top:20,bottom:20,left:20,right:20},"selection"))).svg=null,i.indicatorInitial={row:3,col:10},i.separatorInitial={row:1,col:1},i.getInitialPosition=i.getInitialPosition.bind(Object(u.a)(i)),i.getAction=i.getAction.bind(Object(u.a)(i)),i.visulizeFind=i.visulizeFind.bind(Object(u.a)(i)),i.visulizeMove=i.visulizeMove.bind(Object(u.a)(i)),i.visulizeFindInverse=i.visulizeFindInverse.bind(Object(u.a)(i)),i.visulizeMoveInverse=i.visulizeMoveInverse.bind(Object(u.a)(i)),i.initViz=i.initViz.bind(Object(u.a)(i)),i.clearViz=i.clearViz.bind(Object(u.a)(i));var a=[3,2,6,2,9,8,4],n=i.getAction(a);return i.state={array:a,actions:n,step:0,speed:200,setNewArray:!1,animation:!1},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"getInitialPosition",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.array,e={},i=0;i<t.length;i++)e[i]={row:2,col:i+2};return e}},{key:"componentDidMount",value:function(){this.svg=this.getSVG(),this.drawBasicStructure(),this.initViz(),this.setState({actions:this.getAction()})}},{key:"clearViz",value:function(){this.svg.selectAll("g").remove()}},{key:"initViz",value:function(){for(var t=this.getInitialPosition(),e=0;e<this.state.array.length;e++){var i=t[e],a=this.state.array[e],n="selection-"+e;this.visulizeBox(i.row,i.col,1,1,a,n)}this.drawSeparator(this.separatorInitial.row,this.separatorInitial.col,"selection"),this.drawIndicator(this.indicatorInitial.row,this.indicatorInitial.col,"min","selection")}},{key:"shouldComponentUpdate",value:function(t,e){var i=this.state.step!==e.step,a=e.setNewArray,n=e.animation!==this.state.animation,s=e.animation,r=e.step>=0&&e.step<e.actions.length;return(i||a||n||s)&&r}},{key:"componentDidUpdate",value:function(t,e){if(this.state.setNewArray)this.clearViz(),this.initViz(),this.setState({setNewArray:!1});else if(this.state.step>e.step){var i=this.state.actions[this.state.step];"Find the Lowest #"===i.desc?this.visulizeFind(i.how):"Move the Lowest # to the End of Sorted Array"===i.desc&&this.visulizeMove(i.how)}else if(this.state.step<e.step){var a=this.state.actions[e.step];"Find the Lowest #"===a.desc?this.visulizeFindInverse(a.how):"Move the Lowest # to the End of Sorted Array"===a.desc&&this.visulizeMoveInverse(a.how)}}},{key:"visulizeFind",value:function(t){var e=this,i=t[0].split(" "),a=i[1],n=i[3].split("-");this.move(a,n[0],n[1],.15,.05,function(){var i=t[1];e.select(i.split(" ")[1],null,e.state.speed)},this.state.speed)}},{key:"visulizeFindInverse",value:function(t){var e=this,i=t[1];this.deselect(i.split(" ")[1],function(){var i=t[0].split(" "),a=i[2].split("-"),n=i[1];e.move(n,a[0],a[1],.15,.05,null,e.state.speed)},this.state.speed)}},{key:"visulizeMove",value:function(t){var e=this,i=t[0].split(" "),a=i[1],n=i[3].split("-");this.move(a,n[0],n[1],.15,.05,function(){var i=t[1].split(" "),a=i[1],n=i[3].split("-");e.move(a,n[0],n[1],.05,.05,function(){e.shift(t[2],function(){var i=t[3].split(" "),n=i[1],s=i[3].split("-");e.move(n,s[0],s[1],.5,1,function(){var i=t[4].split(" ")[3].split("-");e.move(a,i[0],i[1],.05,.05,function(){var i=t[5].split(" ")[3].split("-");e.move(a,i[0],i[1],.05,.05,function(){e.sorted(a,e.state.speed)},e.state.speed)},e.state.speed)},e.state.speed)},e.state.speed,1)},e.state.speed)},this.state.speed)}},{key:"visulizeMoveInverse",value:function(t){var e=this,i=t[5].split(" "),a=i[1];this.select(a,function(){var n=i[2].split("-");e.move(a,n[0],n[1],.05,.05,function(){var i=t[4].split(" ")[2].split("-");e.move(a,i[0],i[1],.05,.05,function(){var i=t[3].split(" "),n=i[1],s=i[2].split("-");e.move(n,s[0],s[1],.5,1,function(){e.shift(t[2],function(){var i=t[1].split(" ")[2].split("-");e.move(a,i[0],i[1],.05,.05,function(){var i=t[0].split(" "),a=i[1],n=i[2].split("-");e.move(a,n[0],n[1],.15,.05,null,e.state.speed)},e.state.speed)},e.state.speed,0)},e.state.speed)},e.state.speed)},e.state.speed)},this.state.speed)}},{key:"getAction",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.array,e=[{desc:"Start Sorting",how:[]}],i=[],a=this.getInitialPosition(t),n=[],s=this.indicatorInitial.row,r=JSON.parse(JSON.stringify(this.separatorInitial)),o=0;o<t.length;o++)n.push(o),i.push({number:t[o],index:o});i=i.sort(function(t,e){return t.number-e.number});for(var l=0;l<i.length;l++){var h=i[l].index,c=a[h],d=s+"-"+this.indicatorInitial.col,u=s+"-"+c.col,m="selection-"+h,p=c.row+"-"+c.col,v={desc:"Find the Lowest #",how:["Move indicator-selection "+d+" "+u,"Select "+m]};n[h]=null;for(var g=[],f=null,w=0;w<h;w++)if(null!==n[w]){var y=n[w];0===g.length&&(f=a[y].row+"-"+a[y].col),a[y].col++,g.push("selection-"+y)}var b=r.row+"-"+r.col;r.col++;var S=c.row+1+"-"+c.col,E=r.col,z=c.row+1+"-"+E,I=c.row+"-"+E,x={desc:"Move the Lowest # to the End of Sorted Array",how:["Move indicator-selection "+u+" "+d,"Move "+m+" "+p+" "+S,"Shift "+g+" "+f,"Move separator-selection "+b+" "+(r.row+"-"+r.col),"Move "+m+" "+S+" "+z,"Move "+m+" "+z+" "+I]};e.push(v),e.push(x)}return e.push({desc:"Sort Finished",how:[]}),e}},{key:"render",value:function(){var t=this;if(this.state.actions.length>0){var e=Math.min(this.state.actions.length-1,this.state.step);this.state.actions[e].desc}var i="Play";this.state.animation&&(i="Pause");var a=this.state.actions[this.state.step].desc;return 0!==this.state.step&&this.state.step!==this.state.actions.length-1&&(a="Step "+this.state.step+": "+a),n.a.createElement("div",{id:"selection",className:"animationBox"},n.a.createElement("div",null,a),n.a.createElement(N.a,null,n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step>0&&t.setState({step:t.state.step-1})},disabled:0===this.state.step||this.state.animation},"Prev"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step<t.state.actions.length-1&&t.setState({step:t.state.step+1})},disabled:this.state.step===this.state.actions.length-1||this.state.animation},"Next"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){var e=t.generateRandomArray(5,8),i=t.getAction(e);t.setState({array:e,actions:i,step:0,setNewArray:!0})},disabled:this.state.animation},"Generate New Array"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){if(t.state.animation)window.clearInterval(t.state.animation),t.setState({animation:!1});else{var e=function(){t.setState({animation:window.setInterval(function(){t.state.step<t.state.actions.length-1?t.setState({step:t.state.step+1}):(window.clearInterval(t.state.animation),t.setState({animation:!1}))},1200)})};t.state.step===t.state.actions.length-1?t.setState({step:0},function(){t.clearViz(),t.initViz(),e()}):e()}}},i)))}}]),e}(p),A=i(26),C=(i(122),function(t){function e(t){var i;Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t,30,30,3.5,10,.05,{top:20,bottom:20,left:20,right:20},"insertion"))).svg=null,i.getInitialPosition=i.getInitialPosition.bind(Object(u.a)(i)),i.getAction=i.getAction.bind(Object(u.a)(i)),i.visFirst=i.visFirst.bind(Object(u.a)(i)),i.vizBeginInsertion=i.vizBeginInsertion.bind(Object(u.a)(i)),i.vizFirstCompare=i.vizFirstCompare.bind(Object(u.a)(i)),i.vizFoundPlace=i.vizFoundPlace.bind(Object(u.a)(i)),i.vizInsert=i.vizInsert.bind(Object(u.a)(i)),i.vizWarn=i.vizWarn.bind(Object(u.a)(i)),i.vizNextInsertion=i.vizNextInsertion.bind(Object(u.a)(i)),i.vizCompareNearestTow=i.vizCompareNearestTow.bind(Object(u.a)(i)),i.visFirstInverse=i.visFirstInverse.bind(Object(u.a)(i)),i.vizBeginInsertionInverse=i.vizBeginInsertionInverse.bind(Object(u.a)(i)),i.vizFirstCompareInverse=i.vizFirstCompareInverse.bind(Object(u.a)(i)),i.vizFoundPlaceInverse=i.vizFoundPlaceInverse.bind(Object(u.a)(i)),i.vizInsertInverse=i.vizInsertInverse.bind(Object(u.a)(i)),i.vizWarnInverse=i.vizWarnInverse.bind(Object(u.a)(i)),i.vizNextInsertionInverse=i.vizNextInsertionInverse.bind(Object(u.a)(i)),i.vizCompareNearestTowInverse=i.vizCompareNearestTowInverse.bind(Object(u.a)(i)),i.separatorInitial={row:1,col:1},i.indicatorInitial={row:3,col:10};var a=[3,2,6,2,9,8,4],n=i.getAction(a);return i.state={array:a,actions:n,step:0,speed:200,setNewArray:!1,animation:!1},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"componentDidMount",value:function(){this.svg=this.getSVG(),this.drawBasicStructure(),this.initViz(),this.setState({actions:this.getAction(this.state.array)})}},{key:"componentDidUpdate",value:function(t,e){if(this.state.setNewArray)this.clearViz(),this.initViz(),this.setState({setNewArray:!1});else if(e.step<this.state.step){var i=this.state.actions[this.state.step];"Move First Item into Sorted Array"===i.desc?this.visFirst(i.how):"Begin Insertion"===i.desc?this.vizBeginInsertion(i.how):"Compare with the First"===i.desc?this.vizFirstCompare(i.how):"Yeah! We Found the Place"===i.desc?this.vizFoundPlace(i.how):"Inserting"===i.desc?this.vizInsert(i.how):"Seems Like This is Not the Place"===i.desc?this.vizWarn(i.how):"Go to the Next Insertion Point"===i.desc?this.vizNextInsertion(i.how):"Compare with the Nearest Two"===i.desc&&this.vizCompareNearestTow(i.how)}else if(e.step>this.state.step){var a=e.actions[e.step];"Move First Item into Sorted Array"===a.desc?this.visFirstInverse(a.how):"Begin Insertion"===a.desc?this.vizBeginInsertionInverse(a.how):"Compare with the First"===a.desc?this.vizFirstCompareInverse(a.how):"Yeah! We Found the Place"===a.desc?this.vizFoundPlaceInverse(a.how):"Inserting"===a.desc?this.vizInsertInverse(a.how):"Seems Like This is Not the Place"===a.desc?this.vizWarnInverse(a.how):"Go to the Next Insertion Point"===a.desc?this.vizNextInsertionInverse(a.how):"Compare with the Nearest Two"===a.desc&&this.vizCompareNearestTowInverse(a.how)}}},{key:"visFirst",value:function(t){var e=this,i=t[0].split(" "),a=i[3].split("-");this.move(i[1],+a[0],+a[1],.5,1,function(){var i=t[1].split(" ");e.sorted(i[1],e.state.speed)},this.state.speed)}},{key:"visFirstInverse",value:function(t){var e=this,i=t[0].split(" "),a=i[2].split("-");this.move(i[1],+a[0],+a[1],.5,1,function(){var i=t[1].split(" ");e.deselect(i[1],null,e.state.speed)},this.state.speed)}},{key:"vizBeginInsertion",value:function(t){var e=t[0].split(" "),i=e[3].split("-");this.move(e[1],i[0],i[1],.15,.05,null,this.state.speed);var a=t[1].split(" "),n=a[3].split("-");this.move(a[1],n[0],n[1],.05,.05,null,this.state.speed)}},{key:"vizBeginInsertionInverse",value:function(t){var e=t[0].split(" "),i=e[2].split("-");this.move(e[1],i[0],i[1],.15,.05,null,this.state.speed);var a=t[1].split(" "),n=a[2].split("-");this.move(a[1],n[0],n[1],.05,.05,null,this.state.speed)}},{key:"vizFirstCompare",value:function(t){var e=t[0].split(" "),i=t[1].split(" ");this.select(e[1],null,this.state.speed),this.select(i[1],null,this.state.speed)}},{key:"vizFirstCompareInverse",value:function(t){var e=t[0].split(" "),i=t[1].split(" ");this.sorted(e[1],null,this.state.speed),this.deselect(i[1],null,this.state.speed)}},{key:"vizCompareNearestTow",value:function(t){for(var e=0;e<t.length;e++)this.select(t[e].split(" ")[1],null,this.state.speed)}},{key:"vizCompareNearestTowInverse",value:function(t){this.sorted(t[0].split(" ")[1],null,this.state.speed),this.sorted(t[1].split(" ")[1],null,this.state.speed),this.deselect(t[2].split(" ")[1],null,this.state.speed)}},{key:"vizFoundPlace",value:function(t){var e=t[0].split(" ");this.sorted(e[1],null,this.state.speed)}},{key:"vizFoundPlaceInverse",value:function(t){var e=t[0].split(" ");this.select(e[1],null,this.state.speed)}},{key:"vizInsert",value:function(t){var e=this,i=0,a=1,n=2;if(t.length>3){var s=t[0];this.shift(s,null,this.state.speed,1),i++,a++,n++;var r=t[4].split(" ");if(this.sorted(r[1],null,this.state.speed),6===t.length){var o=t[5].split(" ");this.sorted(o[1],null,this.state.speed)}}var l=t[i].split(" "),h=l[3].split("-");this.move(l[1],+h[0],+h[1],.5,1,function(){var i=t[a].split(" "),s=i[3].split("-");e.move(i[1],s[0],s[1],.05,.05,function(){},e.state.speed);var r=t[n].split(" "),o=r[3].split("-");e.move(r[1],o[0],o[1],.15,.05,null,e.state.speed)},this.state.speed)}},{key:"vizInsertInverse",value:function(t){var e=this,i=0,a=1,n=2;if(t.length>3){var s=t[0];this.shift(s,null,this.state.speed,0),i++,a++,n++;var r=t[4].split(" ");if(this.select(r[1],null,this.state.speed),6===t.length){var o=t[5].split(" ");this.select(o[1],null,this.state.speed)}}var l=t[i].split(" "),h=l[2].split("-");this.move(l[1],+h[0],+h[1],.5,1,function(){var i=t[a].split(" "),s=i[2].split("-");e.move(i[1],s[0],s[1],.05,.05,function(){},e.state.speed);var r=t[n].split(" "),o=r[2].split("-");e.move(r[1],o[0],o[1],.15,.05,null,e.state.speed)},this.state.speed)}},{key:"vizWarn",value:function(t){var e=t[0].split(" ");this.warn(e[1],this.state.speed)}},{key:"vizWarnInverse",value:function(t){var e=t[0].split(" ");this.select(e[1],null,this.state.speed)}},{key:"vizNextInsertion",value:function(t){var e=t[0].split(" "),i=e[3].split("-");this.move(e[1],i[0],i[1],.05,.05,null,this.state.speed);var a=t[1].split(" "),n=a[3].split("-");this.move(a[1],n[0],n[1],.15,.05,null,this.state.speed),this.sorted(t[2].split(" ")[1],null,this.state.speed),this.deselect(e[1],null,this.speed),t.length>4&&this.sorted(t[4].split(" ")[1],null,this.state.speed)}},{key:"vizNextInsertionInverse",value:function(t){var e=t[0].split(" "),i=e[2].split("-");this.move(e[1],i[0],i[1],.05,.05,null,this.state.speed);var a=t[1].split(" "),n=a[2].split("-");this.move(a[1],n[0],n[1],.15,.05,null,this.state.speed),this.select(t[2].split(" ")[1],null,this.state.speed),this.warn(e[1],null,this.speed),t.length>4&&this.select(t[4].split(" ")[1],null,this.state.speed)}},{key:"clearViz",value:function(){this.svg.selectAll("g").remove()}},{key:"initViz",value:function(){for(var t=this.getInitialPosition(),e=0;e<this.state.array.length;e++){var i=t[e],a=this.state.array[e],n="insertion-"+e;this.visulizeBox(i.row,i.col,1,1,a,n)}this.drawSeparator(this.separatorInitial.row,this.separatorInitial.col,"insertion"),this.drawIndicator(this.indicatorInitial.row,this.indicatorInitial.col,null,"insertion")}},{key:"getAction",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.array,e=[{desc:"Start Sorting",how:[]}],i=Object(A.a)(t),a=[],n=this.getInitialPosition(t),s=JSON.parse(JSON.stringify(this.separatorInitial)),r=JSON.parse(JSON.stringify(this.indicatorInitial)),o=s.row+"-"+s.col;s.col++;var l=s.row+"-"+s.col,h=n[0].col;e.push({desc:"Move First Item into Sorted Array",how:["Move separator-insertion "+o+" "+l,"Sort insertion-0"]}),a.push({num:i.shift(),index:0});for(var c=i.length,d=0;d<c;d++){var u=i.shift(),m=d+1,p=n[m],v="insertion-"+m,g=p.row,f=p.col;r.row=3,r.col=h-.5,e.push({desc:"Begin Insertion",how:["Move indicator-insertion "+this.indicatorInitial.row+"-"+this.indicatorInitial.col+" 3-"+(h-.5),"Move "+v+" "+g+"-"+f+" 3.5-"+(h-.5)]}),n[m].col=h-.5,n[m].row=3.5;for(var w=0,y=!1;w<a.length&&!y;){var b={},S={},E={},z=a[w].index,I=n[z],x=a[w].num;if(0===w?(b.desc="Compare with the First",b.how=["Select insertion-"+z,"Select insertion-"+m]):(b.desc="Compare with the Nearest Two",b.how=["Select insertion-"+z,"Select insertion-"+a[w-1].index,"Select insertion-"+m]),u<x){y=!0,S.desc="Yeah! We Found the Place",S.how=["Sort insertion-"+m],E.desc="Inserting",s.col++;for(var k=a.slice(w,a.length),O=0;O<k.length;O++)k[O]="insertion-"+k[O].index;var N=n[m].row+"-"+n[m].col;E.how=["Shift "+k+" "+I.row+"-"+I.col,"Move separator-insertion "+s.row+"-"+(s.col-1)+" "+s.row+"-"+s.col,"Move "+v+" "+N+" "+I.row+"-"+I.col,"Move indicator-insertion "+r.row+"-"+r.col+" "+this.indicatorInitial.row+"-"+this.indicatorInitial.col,"Sort insertion-"+z],w>0&&E.how.push("Sort insertion-"+a[w-1].index),r.col=this.indicatorInitial.col,r.row=this.indicatorInitial.row,n[m].row=I.row,n[m].col=I.col;for(var j=w;j<a.length;j++)n[a[j].index].col++;a.push({num:u,index:m}),a.sort(function(t,e){return t.num-e.num})}else{S.desc="Seems Like This is Not the Place",S.how=["Warn insertion-"+m],E.desc="Go to the Next Insertion Point";var M=n[m],C=M.row+"-"+M.col;M.col++;var P=M.row+"-"+M.col,B=r.row+"-"+r.col;r.col++;var V=r.row+"-"+r.col;E.how=["Move "+v+" "+C+" "+P,"Move indicator-insertion "+B+" "+V,"Sort insertion-"+z,"Deselect "+v],w>0&&E.how.push("Sort insertion-"+a[w-1].index)}e.push(b),e.push(S),e.push(E),w++}y||(e.push({desc:"Yeah! We Found the Place",how:["Sort "+v]}),e.push({desc:"Inserting",how:["Move separator-insertion "+s.row+"-"+s.col+" "+s.row+"-"+(s.col+1),"Move "+v+" "+n[m].row+"-"+n[m].col+" "+(s.row+1)+"-"+(s.col+1),"Move indicator-insertion "+r.row+"-"+r.col+" "+this.indicatorInitial.row+"-"+this.indicatorInitial.col]}),n[m].row=s.row+1,n[m].col=s.col+1,s.col++,r.row=this.indicatorInitial.row,r.col=this.indicatorInitial.col,a.push({num:u,index:m}),a.sort(function(t,e){return t.num<e.num}))}return e.push({desc:"Insert Sort Finished",how:[]}),e}},{key:"getInitialPosition",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.array,e={},i=0;i<t.length;i++)e[i]={row:2,col:i+2};return e}},{key:"render",value:function(){var t=this,e="Play";this.state.animation&&(e="Pause");var i=this.state.actions[this.state.step].desc;return 0!==this.state.step&&this.state.step!==this.state.actions.length-1&&(i="Step "+this.state.step+": "+i),n.a.createElement("div",{id:"insertion",className:"animationBox"},n.a.createElement("div",null,i),n.a.createElement(N.a,null,n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step>0&&t.setState({step:t.state.step-1})},disabled:0===this.state.step||this.state.animation},"Prev"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step<t.state.actions.length-1&&t.setState({step:t.state.step+1})},disabled:this.state.step===this.state.actions.length-1||this.state.animation},"Next"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){var e=t.generateRandomArray(5,8),i=t.getAction(e);t.setState({array:e,actions:i,step:0,setNewArray:!0})},disabled:this.state.animation},"Generate New Array"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){if(t.state.animation)window.clearInterval(t.state.animation),t.setState({animation:!1});else{var e=function(){t.setState({animation:window.setInterval(function(){t.state.step<t.state.actions.length-1?t.setState({step:t.state.step+1}):(window.clearInterval(t.state.animation),t.setState({animation:!1}))},1200)})};t.state.step===t.state.actions.length-1?t.setState({step:0},function(){t.clearViz(),t.initViz(),e()}):e()}}},e)))}}]),e}(p)),P=function(t){function e(t){var i;Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t,30,30,3,12,.05,{top:20,bottom:20,left:20,right:20},"MergeBasic"))).svg=null,i.indicatorInitial={row:3,col:10},i.separatorInitial={row:1,col:1},i.initViz=i.initViz.bind(Object(u.a)(i)),i.getActions=i.getActions.bind(Object(u.a)(i)),i.getShiftIndex=i.getShiftIndex.bind(Object(u.a)(i)),i.vizCompare=i.vizCompare.bind(Object(u.a)(i)),i.vizMin=i.vizMin.bind(Object(u.a)(i)),i.vizPush=i.vizPush.bind(Object(u.a)(i)),i.vizSortOneArray=i.vizSortOneArray.bind(Object(u.a)(i)),i.clearViz=i.clearViz.bind(Object(u.a)(i)),i.arrayStartCol=3;var a=[1,2,4,5],n=[2,3,4,7,8],s=i.getActions(a,n);return i.state={first:a,second:n,actions:s,step:0,speed:200,setNewArray:!1,animation:!1},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"componentDidMount",value:function(){this.svg=this.getSVG(),this.drawBasicStructure(),this.initViz()}},{key:"componentDidUpdate",value:function(t,e){if(this.state.setNewArray)this.clearViz(),this.initViz(),this.setState({setNewArray:!1});else{var i=this.state.step<e.step,a=this.state.actions[this.state.step];i&&(a=e.actions[e.step]);var n=[];null!==a.desc&&(n=a.desc.split(" ")),"Compare the Minimum of Two Arrays"===a.desc?this.vizCompare(a.how,i):"Looks"===n[0]&&"Like"===n[1]?this.vizMin(a.how,i):"Push"===n[0]?this.vizPush(a.how,i):"Just"===n[0]&&this.vizSortOneArray(a.how,i)}}},{key:"initViz",value:function(){this.drawHorizontalGrid(),this.visulizeBox(1,1,2,1,"1st","First-Tag","gray","white"),this.visulizeBox(2,1,2,1,"2nd","Second-Tag","gray","white"),this.visulizeBox(3,1,2,1,"Result","Result-Tag","green","white"),this.drawLine(57,0,57,90);for(var t=0;t<this.state.first.length;t++)this.visulizeBox(1,t+this.arrayStartCol,1,1,this.state.first[t],"MergeBasic-1"+t,"gray","white");for(var e=0;e<this.state.second.length;e++)this.visulizeBox(2,e+this.arrayStartCol,1,1,this.state.second[e],"MergeBasic-2"+e,"gray","white")}},{key:"clearViz",value:function(){this.svg.selectAll("g").remove()}},{key:"vizCompare",value:function(t,e){var i=t[0].split(" "),a=t[1].split(" ");e?(this.deselect(i[1],null,this.state.speed),this.deselect(a[1],null,this.state.speed)):(this.select(i[1],null,this.state.speed),this.select(a[1],null,this.state.speed))}},{key:"vizMin",value:function(t,e){var i=t[0].split(" ")[1];e?this.select(i,null,this.state.speed):this.sorted(i,null,this.state.speed)}},{key:"vizPush",value:function(t,e){var i=-1,a=3;e?(i=0,a=2,this.select(t[0].split(" ")[1],null,this.state.speed)):this.deselect(t[0].split(" ")[1],null,this.state.speed),this.shift(t[2],null,this.state.speed,i);var n=t[1].split(" "),s=n[a].split("-");this.move(n[1],+s[0],+s[1],.05,.05,null,this.state.speed)}},{key:"vizSortOneArray",value:function(t,e){var i=-1,a=3;e?(i=0,a=2,this.deselect(t[0].split(" ")[1],null,this.state.speed)):this.sorted(t[0].split(" ")[1],null,this.state.speed),this.shift(t[2],null,this.state.speed,i);var n=t[1].split(" "),s=n[a].split("-");this.move(n[1],+s[0],+s[1],.05,.05,null,this.state.speed)}},{key:"getActions",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.first,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.state.second,i=[],a=[],n=[],s=0;s<t.length;s++)i.push({num:t[s],id:s});for(var r=0;r<e.length;r++)a.push({num:e[r],id:r});for(var o=[{desc:"Start Sorting",how:[]}],l="1-"+this.arrayStartCol,h="2-"+this.arrayStartCol;i.length>0&&a.length>0;){var c="3-"+(n.length+this.arrayStartCol),d=i[0].num,u=a[0].num,m="MergeBasic-1"+i[0].id,p="MergeBasic-2"+a[0].id;if(o.push({desc:"Compare the Minimum of Two Arrays",how:["Select "+m,"Select "+p]}),d<=u){o.push({desc:"Looks Like the First Array Has the Lower Value",how:["Sort "+m]}),n.push(i.shift());var v=this.getShiftIndex(i,1);o.push({desc:"Push the Minimum of the First Array to the End of the Result",how:["Deselect "+p,"Move "+m+" "+l+" "+c,v]})}else{o.push({desc:"Looks Like the Second Array Has the Lower Value",how:["Sort "+p]}),n.push(a.shift());var g=this.getShiftIndex(a,2);o.push({desc:"Push the Minimum of the Second Array to the End of the Result",how:["Deselect "+m,"Move "+p+" "+h+" "+c,g]})}}for(;i.length>0;){var f="MergeBasic-1"+i[0].id,w="3-"+(n.length+this.arrayStartCol);n.push(i.shift());var y=this.getShiftIndex(i,1);o.push({desc:"Just One Array: Push the Minimum to the End of the Result",how:["Sort "+f,"Move "+f+" "+l+" "+w,y]})}for(;a.length>0;){var b="MergeBasic-2"+a[0].id,S="3-"+(n.length+this.arrayStartCol);n.push(a.shift());var E=this.getShiftIndex(a,2);o.push({desc:"Just One Array: Push the Minimum to the End of the Result",how:["Sort "+b,"Move "+b+" "+h+" "+S,E]})}return o.push({desc:"Sort Finished",how:[]}),o}},{key:"getShiftIndex",value:function(t,e){for(var i="Shift ",a=[],n=0;n<t.length;n++)a.push("MergeBasic-"+e+t[n].id);return i+=a,t.length>0?i+=" "+e+"-"+(this.arrayStartCol+1):i+=" null",i}},{key:"render",value:function(){var t=this;if(this.state.actions.length>0){var e=Math.min(this.state.actions.length-1,this.state.step);this.state.actions[e].desc}var i="Play";this.state.animation&&(i="Pause");var a=this.state.actions[this.state.step].desc;return 0!==this.state.step&&this.state.step!==this.state.actions.length-1&&(a="Step "+this.state.step+": "+a),n.a.createElement("div",{id:"MergeBasic",className:"animationBox"},n.a.createElement("div",null,a),n.a.createElement("div",null,n.a.createElement(N.a,null,n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step>0&&t.setState({step:t.state.step-1})},disabled:0===this.state.step||this.state.animation},"Prev"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step<t.state.actions.length-1&&t.setState({step:t.state.step+1})},disabled:this.state.step===this.state.actions.length-1||this.state.animation},"Next"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){var e=t.generateRandomArray(4,5),i=t.generateRandomArray(4,5);e.sort(function(t,e){return t-e}),i.sort(function(t,e){return t-e});var a=t.getActions(e,i);t.setState({first:e,second:i,actions:a,step:0,setNewArray:!0})},disabled:this.state.animation},"Generate New Array"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){if(t.state.animation)t.setState({animation:!1}),window.clearInterval(t.state.animation);else{var e=function(){t.setState({animation:window.setInterval(function(){t.state.step<t.state.actions.length-1?t.setState({step:t.state.step+1}):(window.clearInterval(t.state.animation),t.setState({animation:!1}))},800)})};t.state.step===t.state.actions.length-1?t.setState({step:0},function(){t.clearViz(),t.initViz(),e()}):e()}}},i))))}}]),e}(p),B=function(t){function e(t){var i;Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t,30,30,4,15,.05,{top:20,bottom:20,left:20,right:20},"MergeSort"))).drawMergeGrid=i.drawMergeGrid.bind(Object(u.a)(i)),i.initViz=i.initViz.bind(Object(u.a)(i)),i.clearViz=i.clearViz.bind(Object(u.a)(i)),i.getInitialPosition=i.getInitialPosition.bind(Object(u.a)(i)),i.getAction=i.getAction.bind(Object(u.a)(i)),i.getActionHandler=i.getActionHandler.bind(Object(u.a)(i)),i.visSplit=i.visSplit.bind(Object(u.a)(i)),i.vizSort=i.vizSort.bind(Object(u.a)(i)),i.vizMerge=i.vizMerge.bind(Object(u.a)(i)),i.vizPush=i.vizPush.bind(Object(u.a)(i));var a=[3,2,6,2,9,8,4,-3];i.arrayStartCol=1;var n=i.getAction(a);return i.state={array:a,actions:n,step:0,speed:200,setNewArray:!1,animation:!1},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"componentDidMount",value:function(){this.svg=this.getSVG(),this.drawBasicStructure(),this.drawHorizontalGrid(),this.initViz()}},{key:"componentDidUpdate",value:function(t,e){if(this.state.setNewArray)this.clearViz(),this.initViz(),this.setState({setNewArray:!1});else{var i=this.state.step<e.step,a=this.state.actions[this.state.step];i&&(a=e.actions[e.step]),"Split Array into Smaller Pieces"===a.desc?this.visSplit(a.how,i):"Array with Single Item is Sorted"===a.desc?this.vizSort(a.how,i):"Merge Two Sorted Array"===a.desc?this.vizMerge(a.how,i):"Push the Minimum to Next Level"===a.desc&&this.vizPush(a.how,i)}}},{key:"initViz",value:function(){for(var t=0;t<this.state.array.length;t++)this.visulizeBox(1,t+this.arrayStartCol,1,1,this.state.array[t],"MergeSort-"+t,"gray","white");this.visulizeBox(2,8,1,1,"","Barriar-1","#525252","white",0,.4,0),this.visulizeBox(3,8,1,1,"","Barriar-2","#525252","white",0,.4,0),this.visulizeBox(3,4,1,1,"","Barriar-3","#525252","white",0,.4,0),this.visulizeBox(3,12,1,1,"","Barriar-4","#525252","white",0,.4,0);for(var e=1;e<=7;e++)this.visulizeBox(4,2*e,1,1,"","Barriar-"+(4+e),"#525252","white",0,.4,0)}},{key:"clearViz",value:function(){this.svg.selectAll("g").remove()}},{key:"visSplit",value:function(t,e){var i=this,a=t[0].split(" "),n=a[0]+" "+a[1]+" "+a[2],s=+a[3],r=3;if(e&&(s=0,r=2),e)for(var o=null,l=1;l<t.length;l++){var h=t[l].split(" "),c=h[r].split("-");l===t.length-1&&(o=function(){i.shift(n,null,i.state.speed,s)}),this.move(h[1],c[0],c[1],.05,.05,o,this.state.speed)}else this.shift(n,function(){for(var e=1;e<t.length;e++){var a=t[e].split(" "),n=a[r].split("-");i.move(a[1],n[0],n[1],.05,.05,null,i.state.speed)}},this.state.speed,s)}},{key:"vizSort",value:function(t,e){e?this.deselect(t[0].split(" ")[1],null,this.state.speed):this.sorted(t[0].split(" ")[1],null,this.state.speed)}},{key:"vizMerge",value:function(t,e){for(var i=0;i<t.length;i++)e?this.sorted(t[i].split(" ")[1],null,this.state.speed):this.select(t[i].split(" ")[1],null,this.state.speed)}},{key:"vizPush",value:function(t,e){var i=3;e?(i=2,this.select(t[0].split(" ")[1],null,this.state.speed)):this.sorted(t[0].split(" ")[1],null,this.state.speed);var a=t[1].split(" "),n=a[i].split("-");this.move(a[1],n[0],n[1],.05,.05,null,this.state.speed)}},{key:"drawMergeGrid",value:function(){for(var t=1;t<=14;t++)this.drawLine(30*t,90,30*t,120);this.drawLine(210,30,210,60),this.drawLine(240,30,240,60);for(var e=1;e<=3;e++)this.drawLine(120*e,60,120*e,90),this.drawLine(120*e-30,60,120*e-30,90)}},{key:"getInitialPosition",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.array,e={},i=0;i<t.length;i++)e[i]={row:1,col:i+this.arrayStartCol};return e}},{key:"getAction",value:function(t){for(var e=[{desc:"Start Sort",how:[]}],i=[],a=0;a<t.length;a++)i.push({num:t[a],id:a});var n=this.getInitialPosition(t);return this.getActionHandler(i,n,1,e),e.push({desc:"Sort Finish",how:[]}),e}},{key:"getActionHandler",value:function(t,e,i,a){if(1===t.length){var n="MergeSort-"+t[0].id;a.push({desc:"Array with Single Item is Sorted",how:["Sort "+n]})}else{for(var s=Math.ceil(t.length/2),r=Math.floor(t.length/2),o=e[t[r].id],l=o.row+"-"+o.col,h="Shift ",c=[],d=r;d<t.length;d++){var u=t[d].id;c.push("MergeSort-"+u),e[u].col+=s}h+=c+" "+l+" "+s;var m={desc:"Split Array into Smaller Pieces"};m.how=[h];for(var p=0;p<t.length;p++){var v=t[p].id,g=e[v].row+"-"+e[v].col;e[v].row++;var f=e[v].row+"-"+e[v].col;m.how.push("Move MergeSort-"+v+" "+g+" "+f)}a.push(m);var w=Object(A.a)(t),y=w.splice(r),b=Object(A.a)(t);this.getActionHandler(w,e,i+1,a),this.getActionHandler(y,e,i+1,a);for(var S={desc:"Merge Two Sorted Array",how:[]},E=0;E<b.length;E++)S.how.push("Select MergeSort-"+t[E].id);a.push(S);var z=b.splice(r);b.sort(function(t,e){return t.num-e.num}),z.sort(function(t,e){return t.num-e.num});for(var I=e[b[0].id],x=I.row-1,k=I.col,O=0,N=0,j=[];O<b.length&&N<z.length;){var M=b[O].num,C=z[N].num,P={desc:"Push the Minimum to Next Level"},B=b[O].id;C<M?(B=z[N].id,N++):O++;var V=e[B].row+"-"+e[B].col,F=x+"-"+(k+j.length);e[B].row=x,e[B].col=k+j.length,j.push(B),P.how=["Sort MergeSort-"+B,"Move MergeSort-"+B+" "+V+" "+F],a.push(P)}for(;O<b.length;){var T={desc:"Push the Minimum to Next Level"},L=b[O].id;O++;var H=e[L].row+"-"+e[L].col,W=x+"-"+(k+j.length);e[L].row=x,e[L].col=k+j.length,j.push(L),T.how=["Sort MergeSort-"+L,"Move MergeSort-"+L+" "+H+" "+W],a.push(T)}for(;N<z.length;){var G={desc:"Push the Minimum to Next Level"},D=z[N].id;N++;var R=e[D].row+"-"+e[D].col,Y=x+"-"+(k+j.length);e[D].row=x,e[D].col=k+j.length,j.push(D),G.how=["Sort MergeSort-"+D,"Move MergeSort-"+D+" "+R+" "+Y],a.push(G)}}}},{key:"render",value:function(){var t=this;if(this.state.actions.length>0){var e=Math.min(this.state.actions.length-1,this.state.step);this.state.actions[e].desc}var i="Play";this.state.animation&&(i="Pause");var a=this.state.actions[this.state.step].desc;return 0!==this.state.step&&this.state.step!==this.state.actions.length-1&&(a="Step "+this.state.step+": "+a),n.a.createElement("div",{id:"MergeSort",className:"animationBox"},n.a.createElement("div",null,a),n.a.createElement("div",null,n.a.createElement(N.a,null,n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step>0&&t.setState({step:t.state.step-1})},disabled:0===this.state.step||this.state.animation},"Prev"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){t.state.step<t.state.actions.length-1&&t.setState({step:t.state.step+1})},disabled:this.state.step===this.state.actions.length-1||this.state.animation},"Next"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){var e=t.generateRandomArray(8,8),i=t.getAction(e);t.setState({array:e,actions:i,step:0,setNewArray:!0})},disabled:this.state.animation},"Generate New Array"),n.a.createElement(j.a,{variant:"secondary",onClick:function(){if(t.state.animation)window.clearInterval(t.state.animation),t.setState({animation:!1});else{var e=function(){t.setState({animation:window.setInterval(function(){t.state.step<t.state.actions.length-1?t.setState({step:t.state.step+1}):(window.clearInterval(t.state.animation),t.setState({animation:!1}))},700)})};t.state.step===t.state.actions.length-1?t.setState({step:0},function(){t.clearViz(),t.initViz(),e()}):e()}}},i))))}}]),e}(p),V=function(t){function e(t){var i;return Object(o.a)(this,e),(i=Object(h.a)(this,Object(c.a)(e).call(this,t))).state={},i}return Object(d.a)(e,t),Object(l.a)(e,[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return n.a.createElement("div",{className:"intro-container"},n.a.createElement("h1",null,"Sorting Algorithms"),n.a.createElement("h2",null,"Selection Sort"),n.a.createElement("p",{className:"intro-text"},"Selection sort is based on the fact that, every time when we remove the minimum of an unsorted array, and attach removed value one by one, then the final array is sorted. And the reason why it works is that, we first put the first smallest item at the front of the list, then put the second smallest item after the first smallest, and then the third smallest item after the second smallest list; and the processes will continue until the largest item is put in the last position. And the following pseudocode shows the basic logic to instruct computers to process selection sort:"),n.a.createElement("div",{className:"code-block"},n.a.createElement("code",null,"Step 1 \u2212 Set MIN to location 0 ",n.a.createElement("br",null),"Step 2 \u2212 Search the minimum element in the list ",n.a.createElement("br",null),"Step 3 \u2212 Swap with value at location MIN ",n.a.createElement("br",null),"Step 4 \u2212 Increment MIN to point to next element",n.a.createElement("br",null),"Step 5 \u2212 Repeat until list is sorted",n.a.createElement("br",null))),n.a.createElement("p",{className:"intro-text"},"Interestingly, although there are the removed values need to joint together, it does NOT need an extra array to save the sorted values. This means, the selection sorted is considered as an in-place sort, which means this sorting algorithm may not need other computer memory usage other than just the given place for the initial array. And the following animation shows the general process of selection sort, and why this sorting algorithm can be considered as an in-place sort."),n.a.createElement("h3",null,"Demo"),n.a.createElement(M,null),n.a.createElement("h2",null,"Insertion Sort"),n.a.createElement("p",{className:"intro-text"},"Insertion sort using facts that are even more obvious than the fact for selection sort. For this sorting algorithm works, there are two major requirements: ",n.a.createElement("br",null)),n.a.createElement("p",{className:"intro-text"},"1. An array with only one or zero element is considered as a sorted array. ",n.a.createElement("br",null),"2. A sorted array is still sorted when a new item is inserted at the position where its value is between its neighbors. ","(Such as 1st Neighbor < Inserted Value <2nd Neighbor)"),n.a.createElement("p",{className:"intro-text"},"With those two facts, we can have an iteration that, we pick the first item of the unsorted array, and then the value is inserted into the appropriate place. And once there is no more item to be picked, we can get a sorted array. And the following pseudocode shows the basic logic to instruct computers to process insertion:"),n.a.createElement("div",{className:"code-block"},n.a.createElement("code",null,"Step 1 \u2212 Put the first item into sorted list;",n.a.createElement("br",null),"Step 2 \u2212 Pick next element",n.a.createElement("br",null),"Step 3 \u2212 Compare with all elements in the sorted sub-list",n.a.createElement("br",null),"Step 4 \u2212 Shift all the elements in the sorted sub-list that is greater than the value to be sorted",n.a.createElement("br",null),"Step 5 \u2212 Insert the value",n.a.createElement("br",null),"Step 6 \u2212 Repeat until list is sorted",n.a.createElement("br",null))),n.a.createElement("p",{className:"intro-text"},"Similar with selection, with appropriate array manipulations such as shifting items in the array, the insertion sort can also be done without any further computer storage and memory requirement, which is consider another common in-place sorting algorithm. And the following animation shows the general process of insertion sort, and why this sorting algorithm can be considered as an in-place sort."),n.a.createElement("h3",null,"Demo"),n.a.createElement(C,null),n.a.createElement("h2",null,"Merge Sort"),n.a.createElement("p",{className:"intro-text"},"Unlike both Insertion Sort and Selection Sort, the theory behind Merge Sort can be a little bit hard to comprehend. Basically, it also requires two facts to make it an efficient sorting algorithm:"),n.a.createElement("p",{className:"intro-text"},"1: An array with only one element is considered as a sorted array. ",n.a.createElement("br",null),"2: It is super easy to merge two sorted arrays into one sorted array."),n.a.createElement("p",{className:"intro-text"},"The first one is kind of making sense. However, the second one may need some deeper thought. Basically, you can consider this as a selection sort where the minimum is always at the front of the two arrays. This means the computer does not need to iterate through the array for finding the minimum, which makes merge two sorted arrays be an easy task. And the following animation shows why such merging process is an easy task for your computer."),n.a.createElement("h3",null,"Demo"),n.a.createElement(P,null),n.a.createElement("p",{className:"intro-text"},"With those two facts, the interesting though about Merge Sort is that: suppose we first break the unsorted array into smaller and smaller pieces, until the pieces only contain 1 item. Then, since merging two sorted arrays is an easy task, we then merge those separated pieces into one joint array. This means, by using both facts, we can successfully sort the pieces. And the following pseudocode shows the basic logic to break the arrays and merge them back."),n.a.createElement("div",{className:"code-block"},n.a.createElement("code",null,"Step 1 \u2212 if it is only one element in the list it is already sorted, return.",n.a.createElement("br",null),"Step 2 \u2212 divide the list recursively into two halves until it can no more be divided.",n.a.createElement("br",null),"Step 3 \u2212 merge two sorted list into one and return it.",n.a.createElement("br",null))),n.a.createElement("p",{className:"intro-text"},"However, this algorithm does have some imperfection on memory storage. For each time, the computer breaks the array into smaller pieces, it must store it in other place in order to further process the smaller ones. This means in terms of computer storage usage; this algorithm is not as efficient as insertion sort and selection sort. However, it does shine in other aspects, which will be introduced in time complexity section. And the following animation shows the general process of merge sort, and why it may need some auxiliary storage."),n.a.createElement("h3",null,"Demo"),n.a.createElement(B,null))}}]),e}(a.Component);var F=function(){return n.a.createElement("div",{className:"App"},n.a.createElement("div",{id:"title-box"},n.a.createElement("p",{id:"main-title"},"Sorting Algorithm 101"),n.a.createElement("p",{id:"sub-title"},"Better than the Algorithm Class in College"),n.a.createElement("p",null,"By Tao Long, Haoran Pu, Yichao Wang")),n.a.createElement(g,null),n.a.createElement(V,null),n.a.createElement(O,null),n.a.createElement(f,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(n.a.createElement(F,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})},98:function(t,e,i){t.exports=i.p+"static/media/timeplot.1abd1fac.png"},99:function(t,e,i){t.exports=i.p+"static/media/spaceplot.29d7fe4d.png"}},[[104,1,2]]]);
//# sourceMappingURL=main.c231ebec.chunk.js.map