{"ast":null,"code":"var _jsxFileName = \"/Users/wyc/Desktop/info474final/src/Components/SortingAlgorithms.js\";\nimport React, { Component } from 'react';\nimport { SelectionSort } from './SelectionSort';\nimport { Insertion } from './Insertion';\nimport { MergeSortBasic } from './MergeSortBasic';\nimport { MergeSort } from './MergeSort';\nexport class SortingAlgorithms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"intro-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Sorting Algorithms\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Insertion Sort\"), React.createElement(\"p\", {\n      className: \"intro-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Selection sort is based on the fact that, every time when we remove the minimum of an unsorted array, and attach removed value one by one, then the final array is sorted. And the reason why it works is that, we first put the first smallest item at the front of the list, then put the second smallest item after the first smallest, and then the third smallest item after the second smallest list; and the processes will continue until the largest item is put in the last position. And the following pseudocode shows the basic logic to instruct computers to process selection sort:\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(MergeSort, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Insertion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(SelectionSort, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(MergeSortBasic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/wyc/Desktop/info474final/src/Components/SortingAlgorithms.js"],"names":["React","Component","SelectionSort","Insertion","MergeSortBasic","MergeSort","SortingAlgorithms","constructor","props","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAO,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAC7CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6kBAHJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWN,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXM,EAYN,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZM,EAaN,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbM,CADJ;AAiBH;;AA/B4C","sourcesContent":["import React, { Component } from 'react';\nimport {SelectionSort} from './SelectionSort'\nimport {Insertion} from './Insertion'\nimport {MergeSortBasic} from './MergeSortBasic'\nimport {MergeSort} from './MergeSort'\n\nexport class SortingAlgorithms extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return(\n            <div className=\"intro-container\">\n                <h1>Sorting Algorithms</h1>\n                <h2>Insertion Sort</h2>\n                <p className='intro-text'>\n                Selection sort is based on the fact that, every time when we remove the minimum of an unsorted array, and attach removed value one by one, then the final array is sorted. And the reason why it works is that, we first put the first smallest item at the front of the list, then put the second smallest item after the first smallest, and then the third smallest item after the second smallest list; and the processes will continue until the largest item is put in the last position. And the following pseudocode shows the basic logic to instruct computers to process selection sort:\n                </p>\n\n                <div>\n                    \n                </div>\n                <MergeSort />\n      <Insertion />\n      <SelectionSort />\n      <MergeSortBasic />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}