{"ast":null,"code":"var _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 474/info474final/src/Components/GridStructure.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { throwStatement } from '@babel/types';\nexport class GridStructure extends Component {\n  constructor(props, gridWidth, gridHeight, rows, cols, padding, margin, id) {\n    super(props);\n    this.gridWidth = 30;\n    this.gridHeight = 30;\n    this.nRow = 10;\n    this.nCol = 10;\n    this.width = this.gridWidth * this.nCol;\n    this.height = this.gridHeight * this.nRow;\n    this.padding = 0.05;\n    this.margin = {\n      top: 20,\n      bottom: 20,\n      left: 20,\n      right: 20\n    };\n    this.id = \"text\";\n    this.svg = null;\n    this.drawLine = this.drawLine.bind(this);\n    this.visulizeBox = this.visulizeBox.bind(this);\n    this.getX = this.getX.bind(this);\n    this.getY = this.getY.bind(this);\n  }\n\n  componentDidMount() {\n    this.svg = d3.select(\"#\" + this.id).append(\"svg\").attr(\"width\", this.width + this.margin.left + this.margin.right).attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n    this.drawLine(0, this.height, 0, 0, \"gray\");\n  }\n\n  drawLine(x1, y1, x2, y2, color) {\n    console.log(y1);\n    console.log(this.getY(y1));\n    this.svg.append(\"line\").style(\"stroke\", color).attr(\"x1\", this.getX(x1)).attr(\"y1\", this.getY(y1)).attr(\"x2\", this.getX(x2)).attr(\"y2\", this.getY(y2));\n  }\n\n  drawHorizontalGrid() {\n    for (let i = 0; i <= this.nRow; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow)).attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow));\n    }\n  }\n\n  visulizeBox(row, col, widthGrid, heightGrid, text, id, boxColor, textColor) {\n    let width = (1 - 2 * this.padding) * this.gridWidth * widthGrid;\n    let height = (1 - 2 * this.padding) * this.gridHeight * heightGrid;\n    let x = (col - 1 + this.padding) * this.gridWidth;\n    let y = (row - 1 + this.padding) * this.gridHeight;\n    let rectGroup = this.svg.append(\"g\").attr(\"id\", id).attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\");\n    let textX = (0.5 - this.padding) * this.gridWidth * widthGrid;\n    let textY = (0.5 - this.padding) * this.gridHeight * heightGrid;\n    let textSize = 1 + \"rem\";\n    rectGroup.append(\"rect\").attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", width).attr(\"height\", height).attr(\"fill\", boxColor);\n    rectGroup.append(\"text\").attr(\"fill\", textColor).style(\"text-anchor\", \"middle\").style(\"alignment-baseline\", \"central\").attr(\"font-size\", textSize).attr(\"dy\", textY).attr(\"dx\", textX).text(text);\n  }\n\n  getX(x) {\n    return x + this.margin.left;\n  }\n\n  getY(y) {\n    return y + this.margin.top;\n  }\n\n  getSVG() {\n    return this.svg;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Ha\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 474/info474final/src/Components/GridStructure.js"],"names":["React","Component","d3","throwStatement","GridStructure","constructor","props","gridWidth","gridHeight","rows","cols","padding","margin","id","nRow","nCol","width","height","top","bottom","left","right","svg","drawLine","bind","visulizeBox","getX","getY","componentDidMount","select","append","attr","x1","y1","x2","y2","color","console","log","style","drawHorizontalGrid","i","row","col","widthGrid","heightGrid","text","boxColor","textColor","x","y","rectGroup","textX","textY","textSize","getSVG","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { throwStatement } from '@babel/types';\n\nexport class GridStructure extends Component {\n    constructor(props, gridWidth, gridHeight, rows, cols, padding, margin, id) {\n        super(props)\n\n        this.gridWidth = 30;\n        \n        this.gridHeight = 30;\n        this.nRow = 10;\n        this.nCol = 10;\n        this.width = this.gridWidth * this.nCol;\n        this.height = this.gridHeight * this.nRow;\n        this.padding = 0.05;\n        this.margin = {\n            top: 20, bottom: 20, left: 20, right: 20\n        };\n        this.id = \"text\"\n\n        this.svg = null;\n        \n        this.drawLine = this.drawLine.bind(this);\n        this.visulizeBox = this.visulizeBox.bind(this);\n        this.getX = this.getX.bind(this)\n        this.getY = this.getY.bind(this)\n    }\n\n    componentDidMount() {\n        this.svg = d3.select(\"#\" + this.id).append(\"svg\")\n                    .attr(\"width\", this.width + this.margin.left + this.margin.right)\n                    .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n        this.drawLine(0, this.height, 0, 0, \"gray\")\n        \n    }\n\n    drawLine(x1, y1, x2, y2, color) {\n        console.log(y1)\n        console.log(this.getY(y1))\n        this.svg.append(\"line\").style(\"stroke\", color)\n                        .attr(\"x1\", this.getX(x1)).attr(\"y1\", this.getY(y1))\n                        .attr(\"x2\", this.getX(x2)).attr(\"y2\", this.getY(y2))\n    }\n\n    drawHorizontalGrid() {\n        for (let i = 0; i <= this.nRow; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow))\n                        .attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow))\n        }\n    }\n\n    visulizeBox(row, col, widthGrid, heightGrid, text, id, boxColor, textColor) {\n        let width = (1 - 2 * this.padding) * this.gridWidth * widthGrid;\n        let height = (1 - 2 * this.padding) * this.gridHeight * heightGrid;\n        let x = (col - 1 + this.padding) * this.gridWidth;\n        let y = (row - 1 + this.padding) * this.gridHeight;\n\n        let rectGroup = this.svg.append(\"g\")\n            .attr(\"id\", id)\n            .attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\")\n\n        let textX = (0.5 - this.padding) * this.gridWidth * widthGrid;\n        let textY = (0.5 - this.padding) * this.gridHeight * heightGrid; \n        let textSize = 1 + \"rem\";\n\n        rectGroup.append(\"rect\")\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", width).attr(\"height\", height).attr(\"fill\", boxColor)\n        \n        rectGroup.append(\"text\").attr(\"fill\", textColor)\n                    .style(\"text-anchor\", \"middle\")\n                    .style(\"alignment-baseline\", \"central\")\n                    .attr(\"font-size\", textSize)\n                    .attr(\"dy\", textY)\n                    .attr(\"dx\", textX)\n                    .text(text)\n    }\n\n    getX(x) {\n        return(x + this.margin.left);\n    }\n\n    getY(y) {\n        return(y + this.margin.top)\n    }\n\n    getSVG() {\n        return(this.svg)\n    }\n\n    render() {\n        return(\n            <div id={this.id}>\n                <p>Ha</p>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}