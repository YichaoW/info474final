{"ast":null,"code":"var _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nexport class SortTwoArray extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstArray: [1, 2, 4, 5],\n      secondArray: [2, 3, 4, 7, 8],\n      actions: [],\n      step: 0\n    };\n    this.row = {\n      \"first\": 1,\n      \"second\": 2,\n      \"compare\": 4,\n      \"result\": 6\n    };\n    this.getSteps = this.getSteps.bind(this);\n    this.svgInitialize = this.svgInitialize.bind(this);\n    this.getX = this.getX.bind(this);\n    this.getY = this.getY.bind(this);\n    this.appendTag = this.appendTag.bind(this);\n    this.visulizeBox = this.visulizeBox.bind(this);\n    this.select = this.select.bind(this);\n    this.deselect = this.deselect.bind(this);\n    this.visulizeStep = this.visulizeStep.bind(this);\n    this.moveTo = this.moveTo.bind(this);\n    this.svg = null;\n    this.gridWidth = 30;\n    this.nCol = 13;\n    this.width = this.nCol * this.gridWidth;\n    this.gridHeight = 30;\n    this.nRow = 6;\n    this.height = this.gridHeight * this.nRow;\n    this.margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n    this.padding = 0.05;\n    this.arrayItem = null;\n  }\n\n  getX(x) {\n    return x + this.margin.left;\n  }\n\n  getY(y) {\n    return y + this.margin.top;\n  }\n\n  componentDidMount() {\n    this.getSteps(this.firstArray, this.secondArray);\n    this.svgInitialize();\n  }\n\n  componentDidUpdate() {\n    this.visulizeStep();\n  }\n\n  visulizeStep() {\n    let action = this.state.actions[this.state.step];\n    let actionList = action.split(\" \");\n    let actionName = actionList[0];\n\n    if (actionName === \"Select\") {\n      this.select(actionList[1]);\n    } else if (actionName === \"Move\") {\n      this.moveTo(actionList[1], actionList[2]);\n    }\n  }\n\n  svgInitialize() {\n    this.svg = d3.select(\"body\").append(\"svg\").attr(\"width\", this.width + this.margin.left + this.margin.right).attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n    this.arrayItem = d3.select(\"svg\").selectAll(\"g\").enter();\n\n    for (let i = 0; i <= this.nRow; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow)).attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow));\n    }\n\n    for (let i = 3; i <= this.nCol; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height));\n    }\n\n    this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height));\n    this.appendTag(1, 2, \"First\");\n    this.appendTag(2, 3, \"Second\");\n    this.appendTag(4, 3.4, \"Compare\");\n    this.appendTag(6, 2.4, \"Result\");\n\n    for (let i = 0; i < this.state.firstArray.length; i++) {\n      let num = this.state.firstArray[i];\n      this.visulizeBox(1, 3 + i + 1, 1, 1, num, \"ID1-\" + i, \"gray\", \"white\");\n    }\n\n    for (let i = 0; i < this.state.secondArray.length; i++) {\n      let num = this.state.secondArray[i];\n      this.visulizeBox(2, 3 + i + 1, 1, 1, num, \"ID2-\" + i, \"gray\", \"white\");\n    }\n  }\n\n  select(id) {\n    d3.select(\"#\" + id + \" > rect\").transition().duration(500).attr(\"fill\", \"green\");\n  }\n\n  deselect(id) {\n    d3.select(\"#\" + id + \" > rect\").transition().duration(500).attr(\"fill\", \"gray\");\n  }\n\n  moveTo(id, place) {\n    let placeList = place.split(\"-\");\n    let nRow = +this.row[placeList[0]];\n    let nCol = +placeList[1] + 3;\n    let newX = this.gridWidth * (nCol - 1 + this.padding);\n    let newY = this.gridHeight * (nRow - 1 + this.padding);\n    d3.select(\"#\" + id).transition().duration(500).attr(\"transform\", \"translate(\" + this.getX(newX) + \", \" + this.getY(newY) + \")\");\n    console.log(nRow);\n    console.log(nCol);\n  }\n\n  appendTag(level, box, text) {\n    let heightPadding = 0.05;\n    let width = this.gridWidth * 0.8 * box;\n    let height = (1 - 2 * heightPadding) * this.gridHeight;\n    let x = 0.1 * this.gridWidth;\n    let y = (level - 1) * this.gridHeight + heightPadding * this.gridHeight;\n    let textX = x + 0.1 * this.gridWidth;\n    let textY = (level - 1) * this.gridHeight + 0.7 * this.gridHeight;\n    let textSize = this.gridWidth * 0.6;\n    this.svg.append(\"rect\").attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y)).attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"steelblue\");\n    this.svg.append(\"text\").attr(\"x\", this.getX(textX)).attr(\"y\", this.getY(textY)).attr(\"fill\", \"white\").attr(\"font-size\", textSize + \"px\").text(text);\n  }\n\n  visulizeBox(row, col, widthGrid, heightGrid, text, id, boxColor, textColor) {\n    let padding = this.padding;\n    let width = (1 - 2 * padding) * this.gridWidth * widthGrid;\n    let height = (1 - 2 * padding) * this.gridHeight * heightGrid;\n    let x = (col - 1 + padding) * this.gridWidth;\n    let y = (row - 1 + padding) * this.gridHeight;\n    let rectGroup = this.svg.append(\"g\").attr(\"id\", id).attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\");\n    let textX = (0.5 - padding) * this.gridWidth;\n    let textY = (0.5 - padding) * this.gridHeight;\n    let textSize = 1 + \"rem\";\n    rectGroup.append(\"rect\").attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", width).attr(\"height\", height).attr(\"fill\", boxColor);\n    rectGroup.append(\"text\").attr(\"fill\", textColor).style(\"text-anchor\", \"middle\").style(\"alignment-baseline\", \"central\").attr(\"font-size\", textSize).attr(\"dy\", textY).attr(\"dx\", textX).text(text);\n  }\n\n  getSteps(firstArray, secondArray) {\n    let result = [];\n    let newAction = [\"start\"];\n    let i = 0;\n    let j = 0;\n\n    while (i < this.state.firstArray.length && j < this.state.secondArray.length) {\n      let num1ID = \"ID\" + 1 + \"-\" + i;\n      let num1 = this.state.firstArray[i];\n      newAction.push(\"Select \" + num1ID);\n      newAction.push(\"Move \" + num1ID + \" compare-1\");\n      let num2ID = \"ID\" + 2 + \"-\" + j;\n      let num2 = this.state.secondArray[j];\n      newAction.push(\"Deselect \" + num1ID);\n      newAction.push(\"Select \" + num2ID);\n      newAction.push(\"Move \" + num2ID + \" compare-2\");\n      newAction.push(\"Deselect \" + num2ID);\n      newAction.push(\"Compare\");\n\n      if (num1 < num2) {\n        result.push(num1);\n        newAction.push(\"Select \" + num1ID);\n        newAction.push(\"Move \" + num1ID + \" result-\" + result.length);\n        newAction.push(\"Shift 1\");\n        i++;\n        newAction.push(\"Deselect \" + num1ID);\n        newAction.push(\"Select \" + num2ID);\n        newAction.push(\"Move \" + num2ID + \" second-1\");\n      } else {\n        result.push(num2);\n        newAction.push(\"Select \" + num2ID);\n        newAction.push(\"Move \" + num2ID + \" result-\" + result.length);\n        newAction.push(\"Shift 2\");\n        j++;\n        newAction.push(\"Deselect \" + num2ID);\n        newAction.push(\"Select \" + num1ID);\n        newAction.push(\"Move \" + num1ID + \" first-1\");\n      }\n    }\n\n    while (i < this.state.firstArray.length) {\n      result.push(this.state.firstArray[i]);\n      let num1ID = 1 + \"-\" + i;\n      newAction.push(\"Select \" + num1ID);\n      newAction.push(\"Move \" + num1ID + \" result-\" + result.length);\n      newAction.push(\"Shift 1\");\n      newAction.push(\"Deselect \" + num1ID);\n      i++;\n    }\n\n    while (j < this.state.secondArray.length) {\n      result.push(this.state.secondArray[j]);\n      let num2ID = 2 + \"-\" + j;\n      newAction.push(\"Select \" + num2ID);\n      newAction.push(\"Move \" + num2ID + \" result-\" + result.length);\n      newAction.push(\"Shift 2\");\n      newAction.push(\"Deselect \" + num2ID);\n      j++;\n    }\n\n    this.setState({\n      actions: newAction\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          step: this.state.step + 1\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js"],"names":["React","Component","d3","SortTwoArray","constructor","props","state","firstArray","secondArray","actions","step","row","getSteps","bind","svgInitialize","getX","getY","appendTag","visulizeBox","select","deselect","visulizeStep","moveTo","svg","gridWidth","nCol","width","gridHeight","nRow","height","margin","top","right","bottom","left","padding","arrayItem","x","y","componentDidMount","componentDidUpdate","action","actionList","split","actionName","append","attr","selectAll","enter","i","style","length","num","id","transition","duration","place","placeList","newX","newY","console","log","level","box","text","heightPadding","textX","textY","textSize","col","widthGrid","heightGrid","boxColor","textColor","rectGroup","result","newAction","j","num1ID","num1","push","num2ID","num2","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\n\nexport class SortTwoArray extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            firstArray: [1, 2, 4, 5],\n            secondArray: [2, 3, 4, 7, 8],\n            actions: [],\n            step: 0\n        }\n\n        this.row = {\n            \"first\": 1,\n            \"second\": 2,\n            \"compare\": 4,\n            \"result\": 6\n        }\n\n        this.getSteps = this.getSteps.bind(this);\n        this.svgInitialize = this.svgInitialize.bind(this);\n        this.getX = this.getX.bind(this);\n        this.getY = this.getY.bind(this);\n        this.appendTag = this.appendTag.bind(this);\n        this.visulizeBox = this.visulizeBox.bind(this);\n        this.select = this.select.bind(this);\n        this.deselect = this.deselect.bind(this);\n        this.visulizeStep = this.visulizeStep.bind(this);\n        this.moveTo = this.moveTo.bind(this);\n\n        this.svg = null;\n\n        this.gridWidth = 30;\n        this.nCol = 13;\n        this.width = this.nCol * this.gridWidth;\n\n        this.gridHeight = 30;\n        this.nRow = 6;\n        this.height = this.gridHeight * this.nRow;\n\n        this.margin = {\n            top: 20, right: 20, bottom: 20, left: 20\n        }\n\n        this.padding = 0.05;\n\n        this.arrayItem = null;\n    }\n\n    getX(x) {\n        return(x + this.margin.left);\n    }\n\n    getY(y) {\n        return(y + this.margin.top)\n    }\n\n    componentDidMount() {\n        this.getSteps(this.firstArray, this.secondArray);\n        this.svgInitialize();\n    }\n\n    componentDidUpdate() {\n        this.visulizeStep();\n    }\n\n    visulizeStep() {\n        let action = this.state.actions[this.state.step]\n        let actionList = action.split(\" \")\n        let actionName = actionList[0]\n        if (actionName === \"Select\") {\n            this.select(actionList[1])\n        } else if (actionName === \"Move\") {\n            this.moveTo(actionList[1], actionList[2])\n        }\n    }\n\n    svgInitialize() {\n        this.svg = d3.select(\"body\").append(\"svg\")\n                    .attr(\"width\", this.width + this.margin.left + this.margin.right)\n                    .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n        \n        this.arrayItem = d3.select(\"svg\").selectAll(\"g\").enter();\n\n        for (let i = 0; i <= this.nRow; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow))\n                        .attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow))\n        }\n\n        for (let i = 3; i <= this.nCol; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height))\n        }\n\n        this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height))\n        \n        this.appendTag(1, 2, \"First\")\n\n        this.appendTag(2, 3, \"Second\")\n\n        this.appendTag(4, 3.4, \"Compare\")\n        this.appendTag(6, 2.4, \"Result\")\n\n        for (let i = 0; i < this.state.firstArray.length; i++) {\n            let num = this.state.firstArray[i];\n            this.visulizeBox(1, (3 + i + 1), 1, 1, num, \"ID1-\" + i, \"gray\", \"white\");\n        }\n\n        for (let i = 0; i < this.state.secondArray.length; i++) {\n            let num = this.state.secondArray[i];\n            this.visulizeBox(2, (3 + i + 1), 1, 1, num, \"ID2-\" + i, \"gray\", \"white\");\n        }\n    }\n\n    select(id) {\n        d3.select(\"#\" + id + \" > rect\").transition().duration(500).attr(\"fill\", \"green\")\n    }\n\n    deselect(id) {\n        d3.select(\"#\" + id + \" > rect\").transition().duration(500).attr(\"fill\", \"gray\")\n    }\n\n    moveTo(id, place) {\n        let placeList = place.split(\"-\")\n        let nRow = +this.row[placeList[0]]\n        let nCol = +placeList[1] + 3\n\n        let newX = this.gridWidth * (nCol - 1 + this.padding)\n        let newY = this.gridHeight * (nRow - 1 + this.padding)\n\n        d3.select(\"#\" + id).transition().duration(500)\n            .attr(\"transform\", \"translate(\" + this.getX(newX) + \", \" + this.getY(newY) + \")\")\n\n        console.log(nRow)\n        console.log(nCol)\n        \n    }\n\n    appendTag(level, box, text) {\n        let heightPadding = 0.05;        \n\n        let width = this.gridWidth * 0.8 * box;\n        let height = (1 - 2 * heightPadding) * this.gridHeight;\n\n        let x = 0.1 * this.gridWidth;\n        let y = (level - 1) * this.gridHeight + heightPadding * this.gridHeight;\n\n        let textX = x + 0.1 * this.gridWidth;\n        let textY = (level - 1) * this.gridHeight + 0.7 * this.gridHeight;\n        let textSize = this.gridWidth * 0.6;\n\n        this.svg.append(\"rect\")\n                .attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y))\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"steelblue\")\n        this.svg.append(\"text\")\n                .attr(\"x\", this.getX(textX))\n                .attr(\"y\", this.getY(textY))\n                .attr(\"fill\", \"white\")\n                .attr(\"font-size\", textSize + \"px\")\n                .text(text);\n    }\n\n    visulizeBox(row, col, widthGrid, heightGrid, text, id, boxColor, textColor) {\n        let padding = this.padding;\n        let width = (1 - 2 * padding) * this.gridWidth * widthGrid;\n        let height = (1 - 2 * padding) * this.gridHeight * heightGrid;\n        let x = (col - 1 + padding) * this.gridWidth;\n        let y = (row - 1 + padding) * this.gridHeight;\n\n        let rectGroup = this.svg.append(\"g\")\n            .attr(\"id\", id)\n            .attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\")\n\n        let textX = (0.5 - padding) * this.gridWidth;\n        let textY = (0.5 - padding) * this.gridHeight \n        let textSize = 1 + \"rem\";\n\n        rectGroup.append(\"rect\")\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", width).attr(\"height\", height).attr(\"fill\", boxColor)\n        \n        rectGroup.append(\"text\").attr(\"fill\", textColor)\n                    .style(\"text-anchor\", \"middle\")\n                    .style(\"alignment-baseline\", \"central\")\n                    .attr(\"font-size\", textSize)\n                    .attr(\"dy\", textY)\n                    .attr(\"dx\", textX)\n                    .text(text)\n    }\n\n\n    getSteps(firstArray, secondArray) {\n        let result = [];\n        let newAction = [\"start\"]\n\n        let i = 0;\n        let j = 0;\n\n\n        while(i < this.state.firstArray.length && j < this.state.secondArray.length) {\n\n            let num1ID = \"ID\" + 1 + \"-\" + i;\n            let num1 = this.state.firstArray[i];\n\n            newAction.push(\"Select \" + num1ID)\n            newAction.push(\"Move \" + num1ID + \" compare-1\")\n\n            let num2ID = \"ID\" + 2 + \"-\" + j;\n            let num2 = this.state.secondArray[j];\n            newAction.push(\"Deselect \" + num1ID)\n            newAction.push(\"Select \" + num2ID)\n            newAction.push(\"Move \" + num2ID + \" compare-2\")\n            newAction.push(\"Deselect \" + num2ID)\n\n            newAction.push(\"Compare\")\n\n\n            if (num1 < num2) {\n                result.push(num1);\n                newAction.push(\"Select \" + num1ID)\n                newAction.push(\"Move \" + num1ID + \" result-\" + (result.length))\n                newAction.push(\"Shift 1\")\n                i++;\n                newAction.push(\"Deselect \" + num1ID)\n                newAction.push(\"Select \" + num2ID)\n                newAction.push(\"Move \" + num2ID + \" second-1\")\n            } else {\n                result.push(num2);\n                newAction.push(\"Select \" + num2ID)\n                newAction.push(\"Move \" + num2ID + \" result-\" + result.length)\n                newAction.push(\"Shift 2\")\n                j++;\n                newAction.push(\"Deselect \" + num2ID)\n                newAction.push(\"Select \" + num1ID)\n                newAction.push(\"Move \" + num1ID + \" first-1\")\n            }\n        }\n\n        while(i < this.state.firstArray.length) {\n            result.push(this.state.firstArray[i])\n            let num1ID = 1 + \"-\" + i;\n            newAction.push(\"Select \" + num1ID)\n            newAction.push(\"Move \" + num1ID + \" result-\" + result.length)\n            newAction.push(\"Shift 1\")\n            newAction.push(\"Deselect \" + num1ID)\n            i++;\n        }\n\n        while(j < this.state.secondArray.length) {\n            result.push(this.state.secondArray[j])\n            let num2ID = 2 + \"-\" + j;\n            newAction.push(\"Select \" + num2ID)\n            newAction.push(\"Move \" + num2ID +\" result-\" + result.length)\n            newAction.push(\"Shift 2\")\n            newAction.push(\"Deselect \" + num2ID)\n            j++;\n        }\n\n        this.setState({\n            actions: newAction\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <button onClick={() => {\n                    this.setState({\n                        step: this.state.step + 1\n                    })\n                }} >Next</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}