{"ast":null,"code":"var _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 474/info474final/src/Components/GridStructure.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nexport class GridStructure extends Component {\n  constructor(props, gridWidth = 30, gridHeight = 30, rows = 5, cols = 5, padding = 0.05, margin = {\n    top: 20,\n    botttom: 20,\n    left: 20,\n    right: 20\n  }) {\n    super(props);\n    this.gridWidth = gridWidth;\n    this.gridHeight = gridHeight;\n    this.rows = rows;\n    this.cols = cols;\n    this.width = gridWidth * cols;\n    this.height = gridHeight * rows;\n    this.padding = padding;\n    this.margin = margin;\n    this.svg = d3.select(\"body\").append(\"svg\").attr(\"width\", this.width + this.margin.left + this.margin.right).attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n    this.drawLine = this.drawLine.bind(this);\n  }\n\n  componentDidMount() {\n    this.drawLine(0, this.height, 0, 0);\n  }\n\n  drawLine(x1, y1, x2, y2, color) {\n    this.svg.append(\"line\").style(\"stroke\", color).attr(\"x1\", this.getX(x1)).attr(\"y1\", this.getY(y1)).attr(\"x2\", this.getX(x2)).attr(\"y2\", this.getY(y2));\n  }\n\n  getX(x) {\n    return x + this.margin.left;\n  }\n\n  getY(y) {\n    return y + this.margin.top;\n  }\n\n  getSVG() {\n    return this.svg;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Basic Grid Structure\");\n  }\n\n}","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 474/info474final/src/Components/GridStructure.js"],"names":["React","Component","d3","GridStructure","constructor","props","gridWidth","gridHeight","rows","cols","padding","margin","top","botttom","left","right","width","height","svg","select","append","attr","bottom","drawLine","bind","componentDidMount","x1","y1","x2","y2","color","style","getX","getY","x","y","getSVG","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,OAAO,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACzCG,EAAAA,WAAW,CAACC,KAAD,EAAQC,SAAS,GAAG,EAApB,EAAwBC,UAAU,GAAG,EAArC,EAAyCC,IAAI,GAAG,CAAhD,EAAmDC,IAAI,GAAG,CAA1D,EAA6DC,OAAO,GAAG,IAAvE,EAA6EC,MAAM,GAAG;AAC7FC,IAAAA,GAAG,EAAE,EADwF;AACpFC,IAAAA,OAAO,EAAE,EAD2E;AACvEC,IAAAA,IAAI,EAAE,EADiE;AAC7DC,IAAAA,KAAK,EAAE;AADsD,GAAtF,EAER;AACC,UAAMV,KAAN;AAEA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKO,KAAL,GAAaV,SAAS,GAAGG,IAAzB;AACA,SAAKQ,MAAL,GAAcV,UAAU,GAAGC,IAA3B;AACA,SAAKE,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AAEA,SAAKO,GAAL,GAAWhB,EAAE,CAACiB,MAAH,CAAU,MAAV,EAAkBC,MAAlB,CAAyB,KAAzB,EACMC,IADN,CACW,OADX,EACoB,KAAKL,KAAL,GAAa,KAAKL,MAAL,CAAYG,IAAzB,GAAgC,KAAKH,MAAL,CAAYI,KADhE,EAEMM,IAFN,CAEW,QAFX,EAEqB,KAAKJ,MAAL,GAAc,KAAKN,MAAL,CAAYC,GAA1B,GAAgC,KAAKD,MAAL,CAAYW,MAFjE,CAAX;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,QAAL,CAAc,CAAd,EAAiB,KAAKN,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC;AACH;;AAEDM,EAAAA,QAAQ,CAACG,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,KAAjB,EAAwB;AAC5B,SAAKZ,GAAL,CAASE,MAAT,CAAgB,MAAhB,EAAwBW,KAAxB,CAA8B,QAA9B,EAAwCD,KAAxC,EACiBT,IADjB,CACsB,IADtB,EAC4B,KAAKW,IAAL,CAAUN,EAAV,CAD5B,EAC2CL,IAD3C,CACgD,IADhD,EACsD,KAAKY,IAAL,CAAUN,EAAV,CADtD,EAEiBN,IAFjB,CAEsB,IAFtB,EAE4B,KAAKW,IAAL,CAAUJ,EAAV,CAF5B,EAE2CP,IAF3C,CAEgD,IAFhD,EAEsD,KAAKY,IAAL,CAAUJ,EAAV,CAFtD;AAGH;;AAEDG,EAAAA,IAAI,CAACE,CAAD,EAAI;AACJ,WAAOA,CAAC,GAAG,KAAKvB,MAAL,CAAYG,IAAvB;AACH;;AAEDmB,EAAAA,IAAI,CAACE,CAAD,EAAI;AACJ,WAAOA,CAAC,GAAG,KAAKxB,MAAL,CAAYC,GAAvB;AACH;;AAEDwB,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKlB,GAAZ;AACH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ;AAGH;;AAhDwC","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nexport class GridStructure extends Component {\n    constructor(props, gridWidth = 30, gridHeight = 30, rows = 5, cols = 5, padding = 0.05, margin = {\n        top: 20, botttom: 20, left: 20, right: 20\n    }) {\n        super(props)\n\n        this.gridWidth = gridWidth;\n        this.gridHeight = gridHeight;\n        this.rows = rows;\n        this.cols = cols;\n        this.width = gridWidth * cols;\n        this.height = gridHeight * rows;\n        this.padding = padding;\n        this.margin = margin;\n\n        this.svg = d3.select(\"body\").append(\"svg\")\n                        .attr(\"width\", this.width + this.margin.left + this.margin.right)\n                        .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n        \n        this.drawLine = this.drawLine.bind(this);\n    }\n\n    componentDidMount() {\n        this.drawLine(0, this.height, 0, 0)\n    }\n\n    drawLine(x1, y1, x2, y2, color) {\n        this.svg.append(\"line\").style(\"stroke\", color)\n                        .attr(\"x1\", this.getX(x1)).attr(\"y1\", this.getY(y1))\n                        .attr(\"x2\", this.getX(x2)).attr(\"y2\", this.getY(y2))\n    }\n\n    getX(x) {\n        return(x + this.margin.left);\n    }\n\n    getY(y) {\n        return(y + this.margin.top)\n    }\n\n    getSVG() {\n        return(this.svg)\n    }\n\n    render() {\n        return(\n            <div>Basic Grid Structure</div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}