{"ast":null,"code":"var _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\nexport class SortTwoArray extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: [],\n      step: 0\n    };\n    this.firstArray = [5, 7, 8, 9, 10];\n    this.secondArray = [2, 3, 6, 8, 9];\n    this.getSteps = this.getSteps.bind(this);\n    this.svgInitialize = this.svgInitialize.bind(this);\n    this.getX = this.getX.bind(this);\n    this.getY = this.getY.bind(this);\n    this.svg = null;\n    this.width = 360;\n    this.height = 240;\n    this.margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n  }\n\n  getX(x) {\n    return x + this.margin.left;\n  }\n\n  getY(y) {\n    return y + this.margin.top;\n  }\n\n  componentDidMount() {\n    this.getSteps(this.firstArray, this.secondArray);\n    this.svgInitialize();\n  }\n\n  svgInitialize() {\n    this.svg = d3.select(\"body\").append(\"svg\").attr(\"width\", this.width + this.margin.left + this.margin.right).attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    for (let i = 0; i <= 8; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / 8)).attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / 8));\n    }\n\n    for (let i = 0; i <= 12; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(i * this.width / 12)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(i * this.width / 12)).attr(\"y2\", this.getY(this.height));\n    }\n\n    this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height));\n    this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(this.width)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(this.height));\n    this.svg.append(\"rect\").attr(\"x\", this.getX(20)).attr(\"y\", this.getY(20)).attr(\"weight\", 20).attr(\"height\", 20).text(\"First Array\");\n  }\n\n  getSteps(firstArray, secondArray) {\n    let newAction = [];\n    newAction.push(\"visulizeFirstArray\");\n    newAction.push(\"visulizeSecondArray\");\n    let i = 0;\n    newAction.push(\"visulizeArrow\");\n    let j = 0;\n    newAction.push(\"visulizeArrow\");\n\n    while (i < firstArray.length && j < secondArray.length) {\n      let num1 = firstArray[i];\n      let num2 = secondArray[j];\n      newAction.push(\"Compare \" + num1);\n      newAction.push(\"Compare \" + num2);\n\n      if (num1 < num2) {\n        newAction.push(\"Push First\");\n        newAction.push(\"Shift First Array\");\n        i++;\n        newAction.push(\"Move Second back\");\n      } else {\n        newAction.push(\"Push Second\");\n        newAction.push(\"Shift Second Array\");\n        j++;\n        newAction.push(\"Move First back\");\n      }\n    }\n\n    while (i < firstArray.length) {\n      newAction.push(\"Push First\");\n      newAction.push(\"Shift First Array\");\n      i++;\n    }\n\n    while (j < secondArray.length) {\n      newAction.push(\"Push Second\");\n      newAction.push(\"Shift Second Array\");\n      j++;\n    }\n\n    console.log(newAction);\n  }\n\n  render() {\n    //console.log(this.state.actions)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"This is sort 1\");\n  }\n\n}","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js"],"names":["React","Component","d3","get","SortTwoArray","constructor","props","state","actions","step","firstArray","secondArray","getSteps","bind","svgInitialize","getX","getY","svg","width","height","margin","top","right","bottom","left","x","y","componentDidMount","select","append","attr","i","style","text","newAction","push","j","length","num1","num2","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\n\n\nexport class SortTwoArray extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            actions: [],\n            step: 0\n        }\n        this.firstArray = [5, 7, 8, 9, 10]\n        this.secondArray = [2, 3, 6, 8, 9]\n\n        this.getSteps = this.getSteps.bind(this);\n        this.svgInitialize = this.svgInitialize.bind(this);\n        this.getX = this.getX.bind(this);\n        this.getY = this.getY.bind(this);\n        this.svg = null;\n        this.width = 360;\n        this.height = 240;\n        this.margin = {\n            top: 20, right: 20, bottom: 20, left: 20\n        }\n    }\n\n    getX(x) {\n        return(x + this.margin.left);\n    }\n\n    getY(y) {\n        return(y + this.margin.top)\n    }\n\n    componentDidMount() {\n        this.getSteps(this.firstArray, this.secondArray);\n        this.svgInitialize();\n    }\n\n    svgInitialize() {\n        this.svg = d3.select(\"body\").append(\"svg\")\n                    .attr(\"width\", this.width + this.margin.left + this.margin.right)\n                    .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n        for (let i = 0; i <= 8; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / 8))\n                        .attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / 8))\n        }\n\n        for (let i = 0; i <= 12; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(i * this.width / 12)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(i * this.width / 12)).attr(\"y2\", this.getY(this.height))\n        }\n\n        this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height))\n        \n        this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(this.width)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(this.height))\n        \n        this.svg.append(\"rect\")\n                .attr(\"x\", this.getX(20)).attr(\"y\", this.getY(20))\n                .attr(\"weight\", 20).attr(\"height\", 20).text(\"First Array\")\n    }\n\n\n    getSteps(firstArray, secondArray) {\n        let newAction = []\n\n        newAction.push(\"visulizeFirstArray\")\n        newAction.push(\"visulizeSecondArray\")\n\n        let i = 0;\n        newAction.push(\"visulizeArrow\")\n        let j = 0;\n        newAction.push(\"visulizeArrow\")\n\n        while(i < firstArray.length && j < secondArray.length) {\n            let num1 = firstArray[i];\n            let num2 = secondArray[j];\n            newAction.push(\"Compare \" + num1)\n            newAction.push(\"Compare \" + num2)\n            if (num1 < num2) {\n                newAction.push(\"Push First\")\n                newAction.push(\"Shift First Array\")\n                i++;\n                newAction.push(\"Move Second back\")\n            } else {\n                newAction.push(\"Push Second\")\n                newAction.push(\"Shift Second Array\")\n                j++;\n                newAction.push(\"Move First back\")\n            }\n        }\n\n        while(i < firstArray.length) {\n            newAction.push(\"Push First\")\n            newAction.push(\"Shift First Array\")\n            i++;\n        }\n\n        while(j < secondArray.length) {\n            newAction.push(\"Push Second\")\n            newAction.push(\"Shift Second Array\")\n            j++;\n        }\n\n        console.log(newAction)\n    }\n\n    render() {\n        //console.log(this.state.actions)\n        return(\n            <div>This is sort 1</div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}