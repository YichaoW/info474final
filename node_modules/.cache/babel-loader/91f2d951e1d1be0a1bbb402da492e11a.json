{"ast":null,"code":"var _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\nexport class SortTwoArray extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actions: [],\n      step: 0\n    };\n    this.firstArray = [5, 7, 8, 9, 10];\n    this.secondArray = [2, 3, 6, 8, 9];\n    this.getSteps = this.getSteps.bind(this);\n    this.svgInitialize = this.svgInitialize.bind(this);\n    this.getX = this.getX.bind(this);\n    this.getY = this.getY.bind(this);\n    this.appendTag = this.appendTag.bind(this);\n    this.svg = null;\n    this.width = 360;\n    this.height = 240;\n    this.nRow = 8;\n    this.nCol = 12;\n    this.margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n  }\n\n  getX(x) {\n    return x + this.margin.left;\n  }\n\n  getY(y) {\n    return y + this.margin.top;\n  }\n\n  componentDidMount() {\n    this.getSteps(this.firstArray, this.secondArray);\n    this.svgInitialize();\n  }\n\n  svgInitialize() {\n    this.svg = d3.select(\"body\").append(\"svg\").attr(\"width\", this.width + this.margin.left + this.margin.right).attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    for (let i = 0; i <= this.nRow; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow)).attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow));\n    }\n\n    for (let i = 0; i <= this.nCol; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height));\n    }\n\n    this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height));\n    this.appendTag(1, \"A\");\n  }\n\n  appendTag(level, text) {\n    let gridHeight = this.height / this.nRow;\n    let gridWidth = this.width / this.nCol;\n    let x = 0.1 * gridWidth;\n    let y = (level - 1) * gridHeight + 0.1 * gridHeight;\n    let width = 20;\n    let height = 20;\n    this.svg.append(\"rect\").attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y)).attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", height).attr(\"height\", width).attr(\"fill\", \"steelblue\");\n    this.svg.append(\"text\").attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y)).attr(\"dx\", \".35em\").text(text);\n  }\n\n  getSteps(firstArray, secondArray) {\n    let newAction = [];\n    newAction.push(\"visulizeFirstArray\");\n    newAction.push(\"visulizeSecondArray\");\n    let i = 0;\n    newAction.push(\"visulizeArrow\");\n    let j = 0;\n    newAction.push(\"visulizeArrow\");\n\n    while (i < firstArray.length && j < secondArray.length) {\n      let num1 = firstArray[i];\n      let num2 = secondArray[j];\n      newAction.push(\"Compare \" + num1);\n      newAction.push(\"Compare \" + num2);\n\n      if (num1 < num2) {\n        newAction.push(\"Push First\");\n        newAction.push(\"Shift First Array\");\n        i++;\n        newAction.push(\"Move Second back\");\n      } else {\n        newAction.push(\"Push Second\");\n        newAction.push(\"Shift Second Array\");\n        j++;\n        newAction.push(\"Move First back\");\n      }\n    }\n\n    while (i < firstArray.length) {\n      newAction.push(\"Push First\");\n      newAction.push(\"Shift First Array\");\n      i++;\n    }\n\n    while (j < secondArray.length) {\n      newAction.push(\"Push Second\");\n      newAction.push(\"Shift Second Array\");\n      j++;\n    }\n\n    console.log(newAction);\n  }\n\n  render() {\n    //console.log(this.state.actions)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"This is sort 1\");\n  }\n\n}","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js"],"names":["React","Component","d3","get","SortTwoArray","constructor","props","state","actions","step","firstArray","secondArray","getSteps","bind","svgInitialize","getX","getY","appendTag","svg","width","height","nRow","nCol","margin","top","right","bottom","left","x","y","componentDidMount","select","append","attr","i","style","level","text","gridHeight","gridWidth","newAction","push","j","length","num1","num2","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\n\n\nexport class SortTwoArray extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            actions: [],\n            step: 0\n        }\n        this.firstArray = [5, 7, 8, 9, 10]\n        this.secondArray = [2, 3, 6, 8, 9]\n\n        this.getSteps = this.getSteps.bind(this);\n        this.svgInitialize = this.svgInitialize.bind(this);\n        this.getX = this.getX.bind(this);\n        this.getY = this.getY.bind(this);\n        this.appendTag = this.appendTag.bind(this);\n        this.svg = null;\n        this.width = 360;\n        this.height = 240;\n        this.nRow = 8;\n        this.nCol = 12;\n\n        this.margin = {\n            top: 20, right: 20, bottom: 20, left: 20\n        }\n    }\n\n    getX(x) {\n        return(x + this.margin.left);\n    }\n\n    getY(y) {\n        return(y + this.margin.top)\n    }\n\n    componentDidMount() {\n        this.getSteps(this.firstArray, this.secondArray);\n        this.svgInitialize();\n    }\n\n    svgInitialize() {\n        this.svg = d3.select(\"body\").append(\"svg\")\n                    .attr(\"width\", this.width + this.margin.left + this.margin.right)\n                    .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n        for (let i = 0; i <= this.nRow; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow))\n                        .attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow))\n        }\n\n        for (let i = 0; i <= this.nCol; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height))\n        }\n\n        this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height))\n        \n        this.appendTag(1, \"A\")\n    }\n\n    appendTag(level, text) {\n        let gridHeight = this.height / this.nRow;\n        let gridWidth = this.width / this.nCol;\n\n        let x = 0.1 * gridWidth;\n        let y = (level - 1) * gridHeight + 0.1 * gridHeight;\n        let width = 20;\n        let height = 20;\n\n        this.svg.append(\"rect\")\n                .attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y))\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", height).attr(\"height\", width).attr(\"fill\", \"steelblue\")\n        this.svg.append(\"text\")\n                .attr(\"x\", this.getX(x))\n                .attr(\"y\", this.getY(y))\n                .attr(\"dx\", \".35em\")\n                .text(text);\n    }\n\n\n    getSteps(firstArray, secondArray) {\n        let newAction = []\n\n        newAction.push(\"visulizeFirstArray\")\n        newAction.push(\"visulizeSecondArray\")\n\n        let i = 0;\n        newAction.push(\"visulizeArrow\")\n        let j = 0;\n        newAction.push(\"visulizeArrow\")\n\n        while(i < firstArray.length && j < secondArray.length) {\n            let num1 = firstArray[i];\n            let num2 = secondArray[j];\n            newAction.push(\"Compare \" + num1)\n            newAction.push(\"Compare \" + num2)\n            if (num1 < num2) {\n                newAction.push(\"Push First\")\n                newAction.push(\"Shift First Array\")\n                i++;\n                newAction.push(\"Move Second back\")\n            } else {\n                newAction.push(\"Push Second\")\n                newAction.push(\"Shift Second Array\")\n                j++;\n                newAction.push(\"Move First back\")\n            }\n        }\n\n        while(i < firstArray.length) {\n            newAction.push(\"Push First\")\n            newAction.push(\"Shift First Array\")\n            i++;\n        }\n\n        while(j < secondArray.length) {\n            newAction.push(\"Push Second\")\n            newAction.push(\"Shift Second Array\")\n            j++;\n        }\n\n        console.log(newAction)\n    }\n\n    render() {\n        //console.log(this.state.actions)\n        return(\n            <div>This is sort 1</div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}