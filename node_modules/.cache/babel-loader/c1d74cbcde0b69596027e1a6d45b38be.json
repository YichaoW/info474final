{"ast":null,"code":"var _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\nexport class SortTwoArray extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstArray: [1, 2, 4, 5],\n      secondArray: [2, 3, 4, 7, 8],\n      actions: [],\n      step: 0\n    };\n    this.row = {\n      \"first\": 1,\n      \"second\": 2,\n      \"compare\": 4,\n      \"result\": 6\n    };\n    this.getSteps = this.getSteps.bind(this);\n    this.svgInitialize = this.svgInitialize.bind(this);\n    this.getX = this.getX.bind(this);\n    this.getY = this.getY.bind(this);\n    this.appendTag = this.appendTag.bind(this);\n    this.visulizeBox = this.visulizeBox.bind(this);\n    this.select = this.select.bind(this);\n    this.deselect = this.deselect.bind(this);\n    this.visulizeStep = this.visulizeStep.bind(this);\n    this.svg = null;\n    this.gridWidth = 30;\n    this.nCol = 13;\n    this.width = this.nCol * this.gridWidth;\n    this.gridHeight = 30;\n    this.nRow = 6;\n    this.height = this.gridHeight * this.nRow;\n    this.margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n  }\n\n  getX(x) {\n    return x + this.margin.left;\n  }\n\n  getY(y) {\n    return y + this.margin.top;\n  }\n\n  componentDidMount() {\n    this.getSteps(this.firstArray, this.secondArray);\n    this.svgInitialize();\n  }\n\n  visulizeStep() {\n    //console.log(this.state.step);\n    let action = this.state.actions[this.state.step];\n    let actionList = action.split(\" \");\n    let actionName = actionList[0];\n\n    if (actionName === \"Select\") {\n      this.select(actionList[1]);\n    }\n\n    console.log(this.actionList);\n  }\n\n  svgInitialize() {\n    this.svg = d3.select(\"body\").append(\"svg\").attr(\"width\", this.width + this.margin.left + this.margin.right).attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    for (let i = 0; i <= this.nRow; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow)).attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow));\n    }\n\n    for (let i = 3; i <= this.nCol; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height));\n    }\n\n    this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height));\n    this.appendTag(1, 2, \"First\");\n    this.appendTag(2, 3, \"Second\");\n    this.appendTag(4, 3.4, \"Compare\");\n    this.appendTag(6, 2.4, \"Result\");\n\n    for (let i = 0; i < this.state.firstArray.length; i++) {\n      let num = this.state.firstArray[i];\n      this.visulizeBox(1, 3 + i + 1, 1, 1, num, \"ID1-\" + i, \"gray\", \"white\");\n    }\n\n    for (let i = 0; i < this.state.secondArray.length; i++) {\n      let num = this.state.secondArray[i];\n      this.visulizeBox(2, 3 + i + 1, 1, 1, num, \"ID2-\" + i, \"gray\", \"white\");\n    }\n  }\n\n  select(id) {\n    d3.select(\"#\" + id + \" > rect\").attr(\"fill\", \"green\").transition().duration(100);\n  }\n\n  deselect(id) {\n    d3.select(\"#\" + id + \" > rect\").attr(\"fill\", \"gray\").transition().duration(100);\n  }\n\n  appendTag(level, box, text) {\n    let heightPadding = 0.05;\n    let width = this.gridWidth * 0.8 * box;\n    let height = (1 - 2 * heightPadding) * this.gridHeight;\n    let x = 0.1 * this.gridWidth;\n    let y = (level - 1) * this.gridHeight + heightPadding * this.gridHeight;\n    let textX = x + 0.1 * this.gridWidth;\n    let textY = (level - 1) * this.gridHeight + 0.7 * this.gridHeight;\n    let textSize = this.gridWidth * 0.6;\n    this.svg.append(\"rect\").attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y)).attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"steelblue\");\n    this.svg.append(\"text\").attr(\"x\", this.getX(textX)).attr(\"y\", this.getY(textY)).attr(\"fill\", \"white\").attr(\"font-size\", textSize + \"px\").text(text);\n  }\n\n  visulizeBox(row, col, widthGrid, heightGrid, text, id, boxColor, textColor) {\n    let padding = 0.05;\n    let width = (1 - 2 * padding) * this.gridWidth * widthGrid;\n    let height = (1 - 2 * padding) * this.gridHeight * heightGrid;\n    let x = (col - 1 + padding) * this.gridWidth;\n    let y = (row - 1 + padding) * this.gridHeight;\n    let rectGroup = this.svg.append(\"g\").attr(\"id\", id).attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\");\n    let textX = (0.5 - padding) * this.gridWidth;\n    let textY = (0.5 - padding) * this.gridHeight;\n    let textSize = 1 + \"rem\";\n    rectGroup.append(\"rect\").attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", width).attr(\"height\", height).attr(\"fill\", boxColor);\n    rectGroup.append(\"text\").attr(\"fill\", textColor).style(\"text-anchor\", \"middle\").style(\"alignment-baseline\", \"central\").attr(\"font-size\", textSize).attr(\"dy\", textY).attr(\"dx\", textX).text(text);\n  }\n\n  getSteps(firstArray, secondArray) {\n    let newAction = [\"start\"];\n    let i = 0;\n    let j = 0;\n\n    while (i < this.state.firstArray.length && j < this.state.secondArray.length) {\n      let num1ID = \"ID\" + 1 + \"-\" + i;\n      let num1 = this.state.firstArray[i];\n      newAction.push(\"Select \" + num1ID);\n      newAction.push(\"Move \" + num1ID + \" compare-1\");\n      let num2ID = \"ID\" + 2 + \"-\" + j;\n      let num2 = this.state.secondArray[j];\n      newAction.push(\"Deselect \" + num1ID);\n      newAction.push(\"Select \" + num2ID);\n      newAction.push(\"Move \" + num2ID + \" compare-2\");\n      newAction.push(\"Deselect \" + num2ID);\n      newAction.push(\"Compare\");\n\n      if (num1 < num2) {\n        newAction.push(\"Select \" + num1ID);\n        newAction.push(\"Move \" + num1ID + \" result-end\");\n        newAction.push(\"Shift 1\");\n        i++;\n        newAction.push(\"Deselect \" + num1ID);\n        newAction.push(\"Select \" + num2ID);\n        newAction.push(\"Move \" + num2ID + \" second-1\");\n      } else {\n        newAction.push(\"Select \" + num2ID);\n        newAction.push(\"Move \" + num2ID + \" result-end\");\n        newAction.push(\"Shift 2\");\n        j++;\n        newAction.push(\"Deselect \" + num2ID);\n        newAction.push(\"Select \" + num1ID);\n        newAction.push(\"Move \" + num1ID + \" first-1\");\n      }\n    }\n\n    while (i < this.state.firstArray.length) {\n      let num1ID = 1 + \"-\" + i;\n      newAction.push(\"Select \" + num1ID);\n      newAction.push(\"Move \" + num1ID + \" result-end\");\n      newAction.push(\"Shift 1\");\n      newAction.push(\"Deselect \" + num1ID);\n      i++;\n    }\n\n    while (j < this.state.secondArray.length) {\n      let num2ID = 2 + \"-\" + j;\n      newAction.push(\"Select \" + num2ID);\n      newAction.push(\"Move \" + num2ID + \" result-end\");\n      newAction.push(\"Shift 2\");\n      newAction.push(\"Deselect \" + num2ID);\n      j++;\n    }\n\n    this.setState({\n      actions: newAction\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          step: this.state.step + 1\n        }, () => {\n          this.visulizeStep();\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js"],"names":["React","Component","d3","get","SortTwoArray","constructor","props","state","firstArray","secondArray","actions","step","row","getSteps","bind","svgInitialize","getX","getY","appendTag","visulizeBox","select","deselect","visulizeStep","svg","gridWidth","nCol","width","gridHeight","nRow","height","margin","top","right","bottom","left","x","y","componentDidMount","action","actionList","split","actionName","console","log","append","attr","i","style","length","num","id","transition","duration","level","box","text","heightPadding","textX","textY","textSize","col","widthGrid","heightGrid","boxColor","textColor","padding","rectGroup","newAction","j","num1ID","num1","push","num2ID","num2","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\n\n\nexport class SortTwoArray extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            firstArray: [1, 2, 4, 5],\n            secondArray: [2, 3, 4, 7, 8],\n            actions: [],\n            step: 0\n        }\n\n        this.row = {\n            \"first\": 1,\n            \"second\": 2,\n            \"compare\": 4,\n            \"result\": 6\n        }\n\n        this.getSteps = this.getSteps.bind(this);\n        this.svgInitialize = this.svgInitialize.bind(this);\n        this.getX = this.getX.bind(this);\n        this.getY = this.getY.bind(this);\n        this.appendTag = this.appendTag.bind(this);\n        this.visulizeBox = this.visulizeBox.bind(this);\n        this.select = this.select.bind(this);\n        this.deselect = this.deselect.bind(this);\n        this.visulizeStep = this.visulizeStep.bind(this);\n\n        this.svg = null;\n\n        this.gridWidth = 30;\n        this.nCol = 13;\n        this.width = this.nCol * this.gridWidth;\n\n        this.gridHeight = 30;\n        this.nRow = 6;\n        this.height = this.gridHeight * this.nRow;\n\n        this.margin = {\n            top: 20, right: 20, bottom: 20, left: 20\n        }\n    }\n\n    getX(x) {\n        return(x + this.margin.left);\n    }\n\n    getY(y) {\n        return(y + this.margin.top)\n    }\n\n    componentDidMount() {\n        this.getSteps(this.firstArray, this.secondArray);\n        this.svgInitialize();\n    }\n\n    visulizeStep() {\n        //console.log(this.state.step);\n        let action = this.state.actions[this.state.step]\n        let actionList = action.split(\" \")\n        let actionName = actionList[0]\n        if (actionName === \"Select\") {\n            this.select(actionList[1])\n        }\n        console.log(this.actionList)\n    }\n\n    svgInitialize() {\n        this.svg = d3.select(\"body\").append(\"svg\")\n                    .attr(\"width\", this.width + this.margin.left + this.margin.right)\n                    .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n        for (let i = 0; i <= this.nRow; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow))\n                        .attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow))\n        }\n\n        for (let i = 3; i <= this.nCol; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height))\n        }\n\n        this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height))\n        \n        this.appendTag(1, 2, \"First\")\n\n        this.appendTag(2, 3, \"Second\")\n\n        this.appendTag(4, 3.4, \"Compare\")\n        this.appendTag(6, 2.4, \"Result\")\n\n        for (let i = 0; i < this.state.firstArray.length; i++) {\n            let num = this.state.firstArray[i];\n            this.visulizeBox(1, (3 + i + 1), 1, 1, num, \"ID1-\" + i, \"gray\", \"white\");\n        }\n\n        for (let i = 0; i < this.state.secondArray.length; i++) {\n            let num = this.state.secondArray[i];\n            this.visulizeBox(2, (3 + i + 1), 1, 1, num, \"ID2-\" + i, \"gray\", \"white\");\n        }\n    }\n\n    select(id) {\n        d3.select(\"#\" + id + \" > rect\").attr(\"fill\", \"green\").transition().duration(100)\n    }\n\n    deselect(id) {\n        d3.select(\"#\" + id + \" > rect\").attr(\"fill\", \"gray\").transition().duration(100)\n    }\n\n    appendTag(level, box, text) {\n        let heightPadding = 0.05;        \n\n        let width = this.gridWidth * 0.8 * box;\n        let height = (1 - 2 * heightPadding) * this.gridHeight;\n\n        let x = 0.1 * this.gridWidth;\n        let y = (level - 1) * this.gridHeight + heightPadding * this.gridHeight;\n\n        let textX = x + 0.1 * this.gridWidth;\n        let textY = (level - 1) * this.gridHeight + 0.7 * this.gridHeight;\n        let textSize = this.gridWidth * 0.6;\n\n        this.svg.append(\"rect\")\n                .attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y))\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"steelblue\")\n        this.svg.append(\"text\")\n                .attr(\"x\", this.getX(textX))\n                .attr(\"y\", this.getY(textY))\n                .attr(\"fill\", \"white\")\n                .attr(\"font-size\", textSize + \"px\")\n                .text(text);\n    }\n\n    visulizeBox(row, col, widthGrid, heightGrid, text, id, boxColor, textColor) {\n        let padding = 0.05;\n        let width = (1 - 2 * padding) * this.gridWidth * widthGrid;\n        let height = (1 - 2 * padding) * this.gridHeight * heightGrid;\n        let x = (col - 1 + padding) * this.gridWidth;\n        let y = (row - 1 + padding) * this.gridHeight;\n\n        let rectGroup = this.svg.append(\"g\")\n            .attr(\"id\", id)\n            .attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\")\n\n        let textX = (0.5 - padding) * this.gridWidth;\n        let textY = (0.5 - padding) * this.gridHeight \n        let textSize = 1 + \"rem\";\n\n        rectGroup.append(\"rect\")\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", width).attr(\"height\", height).attr(\"fill\", boxColor)\n        \n        rectGroup.append(\"text\").attr(\"fill\", textColor)\n                    .style(\"text-anchor\", \"middle\")\n                    .style(\"alignment-baseline\", \"central\")\n                    .attr(\"font-size\", textSize)\n                    .attr(\"dy\", textY)\n                    .attr(\"dx\", textX)\n                    .text(text)\n    }\n\n\n    getSteps(firstArray, secondArray) {\n        let newAction = [\"start\"]\n\n        let i = 0;\n        let j = 0;\n\n\n        while(i < this.state.firstArray.length && j < this.state.secondArray.length) {\n            let num1ID = \"ID\" + 1 + \"-\" + i;\n            let num1 = this.state.firstArray[i];\n\n            newAction.push(\"Select \" + num1ID)\n            newAction.push(\"Move \" + num1ID + \" compare-1\")\n\n            let num2ID = \"ID\" + 2 + \"-\" + j;\n            let num2 = this.state.secondArray[j];\n            newAction.push(\"Deselect \" + num1ID)\n            newAction.push(\"Select \" + num2ID)\n            newAction.push(\"Move \" + num2ID + \" compare-2\")\n            newAction.push(\"Deselect \" + num2ID)\n\n            newAction.push(\"Compare\")\n            if (num1 < num2) {\n                newAction.push(\"Select \" + num1ID)\n                newAction.push(\"Move \" + num1ID + \" result-end\")\n                newAction.push(\"Shift 1\")\n                i++;\n                newAction.push(\"Deselect \" + num1ID)\n                newAction.push(\"Select \" + num2ID)\n                newAction.push(\"Move \" + num2ID + \" second-1\")\n            } else {\n                newAction.push(\"Select \" + num2ID)\n                newAction.push(\"Move \" + num2ID + \" result-end\")\n                newAction.push(\"Shift 2\")\n                j++;\n                newAction.push(\"Deselect \" + num2ID)\n                newAction.push(\"Select \" + num1ID)\n                newAction.push(\"Move \" + num1ID + \" first-1\")\n            }\n        }\n\n        while(i < this.state.firstArray.length) {\n            let num1ID = 1 + \"-\" + i;\n            newAction.push(\"Select \" + num1ID)\n            newAction.push(\"Move \" + num1ID + \" result-end\")\n            newAction.push(\"Shift 1\")\n            newAction.push(\"Deselect \" + num1ID)\n            i++;\n        }\n\n        while(j < this.state.secondArray.length) {\n            let num2ID = 2 + \"-\" + j;\n            newAction.push(\"Select \" + num2ID)\n            newAction.push(\"Move \" + num2ID +\" result-end\")\n            newAction.push(\"Shift 2\")\n            newAction.push(\"Deselect \" + num2ID)\n            j++;\n        }\n\n        this.setState({\n            actions: newAction\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <button onClick={() => {\n                    this.setState({\n                        step: this.state.step + 1\n                    }, () => {\n                        this.visulizeStep()\n                    })\n                }} >Next</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}