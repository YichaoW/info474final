{"ast":null,"code":"var _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\nexport class SortTwoArray extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstArray: [1, 2, 4, 5],\n      secondArray: [2, 3, 4, 7, 8]\n    };\n    this.firstArray = [5, 7, 8, 9, 10];\n    this.secondArray = [2, 3, 6, 8, 9];\n    this.getSteps = this.getSteps.bind(this);\n    this.svgInitialize = this.svgInitialize.bind(this);\n    this.getX = this.getX.bind(this);\n    this.getY = this.getY.bind(this);\n    this.appendTag = this.appendTag.bind(this);\n    this.visulizeBox = this.visulizeBox.bind(this);\n    this.svg = null;\n    this.gridWidth = 30;\n    this.nCol = 13;\n    this.width = this.nCol * this.gridWidth;\n    this.gridHeight = 30;\n    this.nRow = 6;\n    this.height = this.gridHeight * this.nRow;\n    this.margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n  }\n\n  getX(x) {\n    return x + this.margin.left;\n  }\n\n  getY(y) {\n    return y + this.margin.top;\n  }\n\n  componentDidMount() {\n    this.getSteps(this.firstArray, this.secondArray);\n    this.svgInitialize();\n  }\n\n  svgInitialize() {\n    this.svg = d3.select(\"body\").append(\"svg\").attr(\"width\", this.width + this.margin.left + this.margin.right).attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    for (let i = 0; i <= this.nRow; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow)).attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow));\n    }\n\n    for (let i = 3; i <= this.nCol; i++) {\n      this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height));\n    }\n\n    this.svg.append(\"line\").style(\"stroke\", \"gray\").attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0)).attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height));\n    this.appendTag(1, 2, \"First\");\n    this.appendTag(2, 3, \"Second\");\n    this.appendTag(4, 3.4, \"Compare\");\n    this.appendTag(6, 2.4, \"Result\");\n    this.visulizeBox(1, 4, 1, 1, \"1\", \"1\");\n  }\n\n  appendTag(level, box, text) {\n    let heightPadding = 0.05;\n    let width = this.gridWidth * 0.8 * box;\n    let height = (1 - 2 * heightPadding) * this.gridHeight;\n    let x = 0.1 * this.gridWidth;\n    let y = (level - 1) * this.gridHeight + heightPadding * this.gridHeight;\n    let textX = x + 0.1 * this.gridWidth;\n    let textY = (level - 1) * this.gridHeight + 0.7 * this.gridHeight;\n    let textSize = this.gridWidth * 0.6;\n    this.svg.append(\"rect\").attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y)).attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"steelblue\");\n    this.svg.append(\"text\").attr(\"x\", this.getX(textX)).attr(\"y\", this.getY(textY)).attr(\"fill\", \"white\").attr(\"font-size\", textSize + \"px\").text(text);\n  }\n\n  visulizeBox(row, col, widthGrid, heightGrid, num, id) {\n    let padding = 0.05;\n    let width = (1 - 2 * padding) * this.gridWidth * widthGrid;\n    let height = (1 - 2 * padding) * this.gridHeight * heightGrid;\n    let x = (col - 1 + padding) * this.gridWidth;\n    let y = (row - 1 + padding) * this.gridHeight;\n    let rectGroup = this.svg.append(\"g\").attr(\"id\", id).attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\");\n    let textX = 0.13 * this.gridWidth;\n    let textY = 0.65 * this.gridHeight;\n    let textSize = 1 + \"rem\";\n    rectGroup.append(\"rect\") //.attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y))\n    .attr(\"rx\", 5).attr(\"ry\", 5).attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"gray\");\n    rectGroup.append(\"text\").attr(\"fill\", \"white\").style(\"text-anchor\", \"middle\").attr(\"font-size\", textSize).attr(\"dy\", textY).text(num);\n  }\n\n  getSteps(firstArray, secondArray) {\n    let newAction = [];\n    newAction.push(\"visulizeFirstArray\");\n    newAction.push(\"visulizeSecondArray\");\n    let i = 0;\n    newAction.push(\"visulizeArrow\");\n    let j = 0;\n    newAction.push(\"visulizeArrow\");\n\n    while (i < firstArray.length && j < secondArray.length) {\n      let num1 = firstArray[i];\n      let num2 = secondArray[j];\n      newAction.push(\"Compare \" + num1);\n      newAction.push(\"Compare \" + num2);\n\n      if (num1 < num2) {\n        newAction.push(\"Push First\");\n        newAction.push(\"Shift First Array\");\n        i++;\n        newAction.push(\"Move Second back\");\n      } else {\n        newAction.push(\"Push Second\");\n        newAction.push(\"Shift Second Array\");\n        j++;\n        newAction.push(\"Move First back\");\n      }\n    }\n\n    while (i < firstArray.length) {\n      newAction.push(\"Push First\");\n      newAction.push(\"Shift First Array\");\n      i++;\n    }\n\n    while (j < secondArray.length) {\n      newAction.push(\"Push Second\");\n      newAction.push(\"Shift Second Array\");\n      j++;\n    }\n\n    console.log(newAction);\n  }\n\n  render() {\n    //console.log(this.state.actions)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"This is sort 1\");\n  }\n\n}","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 474/final_proj/src/Components/SortTwoArray.js"],"names":["React","Component","d3","get","SortTwoArray","constructor","props","state","firstArray","secondArray","getSteps","bind","svgInitialize","getX","getY","appendTag","visulizeBox","svg","gridWidth","nCol","width","gridHeight","nRow","height","margin","top","right","bottom","left","x","y","componentDidMount","select","append","attr","i","style","level","box","text","heightPadding","textX","textY","textSize","row","col","widthGrid","heightGrid","num","id","padding","rectGroup","newAction","push","j","length","num1","num2","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { get } from 'https';\n\n\nexport class SortTwoArray extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            firstArray: [1, 2, 4, 5],\n            secondArray: [2, 3, 4, 7, 8]\n        }\n        this.firstArray = [5, 7, 8, 9, 10]\n        this.secondArray = [2, 3, 6, 8, 9]\n\n        this.getSteps = this.getSteps.bind(this);\n        this.svgInitialize = this.svgInitialize.bind(this);\n        this.getX = this.getX.bind(this);\n        this.getY = this.getY.bind(this);\n        this.appendTag = this.appendTag.bind(this);\n        this.visulizeBox = this.visulizeBox.bind(this);\n        this.svg = null;\n\n        this.gridWidth = 30;\n        this.nCol = 13;\n        this.width = this.nCol * this.gridWidth;\n\n        this.gridHeight = 30;\n        this.nRow = 6;\n        this.height = this.gridHeight * this.nRow;\n\n        this.margin = {\n            top: 20, right: 20, bottom: 20, left: 20\n        }\n    }\n\n    getX(x) {\n        return(x + this.margin.left);\n    }\n\n    getY(y) {\n        return(y + this.margin.top)\n    }\n\n    componentDidMount() {\n        this.getSteps(this.firstArray, this.secondArray);\n        this.svgInitialize();\n    }\n\n    svgInitialize() {\n        this.svg = d3.select(\"body\").append(\"svg\")\n                    .attr(\"width\", this.width + this.margin.left + this.margin.right)\n                    .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n        for (let i = 0; i <= this.nRow; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(i * this.height / this.nRow))\n                        .attr(\"x2\", this.getX(this.width)).attr(\"y2\", this.getY(i * this.height / this.nRow))\n        }\n\n        for (let i = 3; i <= this.nCol; i++) {\n            this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(i * this.width / this.nCol)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(i * this.width / this.nCol)).attr(\"y2\", this.getY(this.height))\n        }\n\n        this.svg.append(\"line\").style(\"stroke\", \"gray\")\n                        .attr(\"x1\", this.getX(0)).attr(\"y1\", this.getY(0))\n                        .attr(\"x2\", this.getX(0)).attr(\"y2\", this.getY(this.height))\n        \n        this.appendTag(1, 2, \"First\")\n\n        this.appendTag(2, 3, \"Second\")\n\n        this.appendTag(4, 3.4, \"Compare\")\n        this.appendTag(6, 2.4, \"Result\")\n\n        this.visulizeBox(1, 4, 1, 1, \"1\", \"1\");\n    }\n\n    appendTag(level, box, text) {\n        let heightPadding = 0.05;        \n\n        let width = this.gridWidth * 0.8 * box;\n        let height = (1 - 2 * heightPadding) * this.gridHeight;\n\n        let x = 0.1 * this.gridWidth;\n        let y = (level - 1) * this.gridHeight + heightPadding * this.gridHeight;\n\n        let textX = x + 0.1 * this.gridWidth;\n        let textY = (level - 1) * this.gridHeight + 0.7 * this.gridHeight;\n        let textSize = this.gridWidth * 0.6;\n\n        this.svg.append(\"rect\")\n                .attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y))\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"steelblue\")\n        this.svg.append(\"text\")\n                .attr(\"x\", this.getX(textX))\n                .attr(\"y\", this.getY(textY))\n                .attr(\"fill\", \"white\")\n                .attr(\"font-size\", textSize + \"px\")\n                .text(text);\n    }\n\n    visulizeBox(row, col, widthGrid, heightGrid, num, id) {\n        let padding = 0.05;\n        let width = (1 - 2 * padding) * this.gridWidth * widthGrid;\n        let height = (1 - 2 * padding) * this.gridHeight * heightGrid;\n        let x = (col - 1 + padding) * this.gridWidth;\n        let y = (row - 1 + padding) * this.gridHeight;\n\n        let rectGroup = this.svg.append(\"g\")\n            .attr(\"id\", id)\n            .attr(\"transform\", \"translate(\" + this.getX(x) + \", \" + this.getY(y) + \")\")\n\n        let textX = 0.13 * this.gridWidth;\n        let textY = 0.65 * this.gridHeight \n        let textSize = 1 + \"rem\";\n\n        rectGroup.append(\"rect\")\n                //.attr(\"x\", this.getX(x)).attr(\"y\", this.getY(y))\n                .attr(\"rx\", 5).attr(\"ry\", 5)\n                .attr(\"width\", width).attr(\"height\", height).attr(\"fill\", \"gray\")\n        \n        rectGroup.append(\"text\").attr(\"fill\", \"white\")\n                    .style(\"text-anchor\", \"middle\")\n                    .attr(\"font-size\", textSize)\n                    .attr(\"dy\", textY)\n                    .text(num)\n    }\n\n\n    getSteps(firstArray, secondArray) {\n        let newAction = []\n\n        newAction.push(\"visulizeFirstArray\")\n        newAction.push(\"visulizeSecondArray\")\n\n        let i = 0;\n        newAction.push(\"visulizeArrow\")\n        let j = 0;\n        newAction.push(\"visulizeArrow\")\n\n        while(i < firstArray.length && j < secondArray.length) {\n            let num1 = firstArray[i];\n            let num2 = secondArray[j];\n            newAction.push(\"Compare \" + num1)\n            newAction.push(\"Compare \" + num2)\n            if (num1 < num2) {\n                newAction.push(\"Push First\")\n                newAction.push(\"Shift First Array\")\n                i++;\n                newAction.push(\"Move Second back\")\n            } else {\n                newAction.push(\"Push Second\")\n                newAction.push(\"Shift Second Array\")\n                j++;\n                newAction.push(\"Move First back\")\n            }\n        }\n\n        while(i < firstArray.length) {\n            newAction.push(\"Push First\")\n            newAction.push(\"Shift First Array\")\n            i++;\n        }\n\n        while(j < secondArray.length) {\n            newAction.push(\"Push Second\")\n            newAction.push(\"Shift Second Array\")\n            j++;\n        }\n\n        console.log(newAction)\n    }\n\n    render() {\n        //console.log(this.state.actions)\n        return(\n            <div>This is sort 1</div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}